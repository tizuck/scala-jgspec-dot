# Coverage data, format version: 2.0
# Statement data:
# - id
# - source path
# - package name
# - class name
# - class type (Class, Object or Trait)
# - full class name
# - method name
# - start offset
# - end offset
# - line number
# - symbol name
# - tree name
# - is branch
# - invocations count
# - is ignored
# - description (can be multi-line)
# '' sign
# ------------------------------------------
1
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
315
1318
13
<nosymbol>
Literal
false
0
false
"\r\n      |{\r\n      |  \"graph\": {\r\n      |    \"directed\": true,\r\n      |    \"type\": \"interface automaton\",\r\n      |    \"metadata\": {\r\n      |      \"ctx\":{\r\n      |        \"transactionId\":0,\r\n      |        \"spawnId\":0\r\n      |      }\r\n      |    },\r\n      |    \"nodes\": {\r\n      |      \"q0\":{\r\n      |        \"label\":\"q0\"\r\n      |      },\r\n      |      \"q1\":{\r\n      |        \"label\":\"q1\"\r\n      |      },\r\n      |      \"q2\":{\r\n      |        \"label\":\"q2\"\r\n      |      }\r\n      |    },\r\n      |    \"edges\": [\r\n      |      {\r\n      |        \"source\": \"q0\",\r\n      |        \"target\": \"q1\",\r\n      |        \"directed\": true,\r\n      |        \"label\": \"req\"\r\n      |\t  },\r\n      |\t  {\r\n      |\t    \"source\": \"q1\",\r\n      |\t    \"target\": \"q2\",\r\n      |\t    \"directed\": true,\r\n      |\t    \"label\":\"read\"\r\n      |\t  },\r\n      |\t  {\r\n      |\t    \"source\": \"q2\",\r\n      |\t    \"target\": \"q0\",\r\n      |\t    \"directed\": true,\r\n      |\t    \"label\":\"snd\"\r\n      |\t  }\r\n      |    ]\r\n      |  }\r\n      |}\r\n      |"

2
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
315
1330
57
scala.collection.StringOps.stripMargin
Select
false
0
false
scala.Predef.augmentString("\r\n      |{\r\n      |  \"graph\": {\r\n      |    \"directed\": true,\r\n      |    \"type\": \"interface automaton\",\r\n      |    \"metadata\": {\r\n      |      \"ctx\":{\r\n      |        \"transactionId\":0,\r\n      |        \"spawnId\":0\r\n      |      }\r\n      |    },\r\n      |    \"nodes\": {\r\n      |      \"q0\":{\r\n      |        \"label\":\"q0\"\r\n      |      },\r\n      |      \"q1\":{\r\n      |        \"label\":\"q1\"\r\n      |      },\r\n      |      \"q2\":{\r\n      |        \"label\":\"q2\"\r\n      |      }\r\n      |    },\r\n      |    \"edges\": [\r\n      |      {\r\n      |        \"source\": \"q0\",\r\n      |        \"target\": \"q1\",\r\n      |        \"directed\": true,\r\n      |        \"label\": \"req\"\r\n      |\t  },\r\n      |\t  {\r\n      |\t    \"source\": \"q1\",\r\n      |\t    \"target\": \"q2\",\r\n      |\t    \"directed\": true,\r\n      |\t    \"label\":\"read\"\r\n      |\t  },\r\n      |\t  {\r\n      |\t    \"source\": \"q2\",\r\n      |\t    \"target\": \"q0\",\r\n      |\t    \"directed\": true,\r\n      |\t    \"label\":\"snd\"\r\n      |\t  }\r\n      |    ]\r\n      |  }\r\n      |}\r\n      |").stripMargin

3
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
1510
1514
64
com.github.tizuck.Main.json
Select
false
0
false
Main.this.json

4
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
1504
1515
64
io.circe.Parser.parse
Apply
false
0
false
io.circe.parser.`package`.parse(Main.this.json)

5
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
1618
1618
71
io.circe.LowPriorityDecoders.importedDecoder
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.importedDecoder[com.github.tizuck.Main.GraphMetadata]((new io.circe.export.Exported[io.circe.Decoder[com.github.tizuck.Main.GraphMetadata]]((shapeless.lazily.apply[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphMetadata]]({
  val inst$macro$18: io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphMetadata] = {
    final class anon$importedDecoder$macro$17 extends AnyRef with Serializable {
      def <init>(): anon$importedDecoder$macro$17 = {
        anon$importedDecoder$macro$17.super.<init>();
        ()
      };
      <stable> <accessor> lazy val inst$macro$1: io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphMetadata] = decoding.this.DerivedDecoder.deriveDecoder[com.github.tizuck.Main.GraphMetadata, shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](shapeless.this.LabelledGeneric.materializeProduct[com.github.tizuck.Main.GraphMetadata, (Symbol @@ String("ctx")) :: shapeless.HNil, com.github.tizuck.Main.GraphContext :: shapeless.HNil, shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](DefaultSymbolicLabelling.instance[com.github.tizuck.Main.GraphMetadata, (Symbol @@ String("ctx")) :: shapeless.HNil](::.apply[Symbol @@ String("ctx"), shapeless.HNil.type](scala.Symbol.apply("ctx").asInstanceOf[Symbol @@ String("ctx")], HNil)), Generic.instance[com.github.tizuck.Main.GraphMetadata, com.github.tizuck.Main.GraphContext :: shapeless.HNil](((x0$3: com.github.tizuck.Main.GraphMetadata) => x0$3 match {
  case (ctx: com.github.tizuck.Main.GraphContext): com.github.tizuck.Main.GraphMetadata((ctx$macro$5 @ _)) => ::.apply[com.github.tizuck.Main.GraphContext, shapeless.HNil.type](ctx$macro$5, HNil).asInstanceOf[com.github.tizuck.Main.GraphContext :: shapeless.HNil]
}), ((x0$4: com.github.tizuck.Main.GraphContext :: shapeless.HNil) => x0$4 match {
  case (head: com.github.tizuck.Main.GraphContext, tail: shapeless.HNil): com.github.tizuck.Main.GraphContext :: shapeless.HNil((ctx$macro$4 @ _), HNil) => Main.this.GraphMetadata.apply(ctx$macro$4)
})), hlist.this.ZipWithKeys.hconsZipWithKeys[Symbol @@ String("ctx"), com.github.tizuck.Main.GraphContext, shapeless.HNil, shapeless.HNil, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](hlist.this.ZipWithKeys.hnilZipWithKeys, Witness.mkWitness[Symbol with shapeless.tag.Tagged[String("ctx")]](scala.Symbol.apply("ctx").asInstanceOf[Symbol @@ String("ctx")].asInstanceOf[Symbol with shapeless.tag.Tagged[String("ctx")]])), scala.this.<:<.refl[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]), shapeless.Lazy.apply[io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]](anon$importedDecoder$macro$17.this.inst$macro$6)).asInstanceOf[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphMetadata]];
      <stable> <accessor> lazy val inst$macro$6: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ({
  final class $anon extends io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] {
    def <init>(): <$anon: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]> = {
      $anon.super.<init>();
      ()
    };
    private[this] val circeGenericDecoderForctx: io.circe.Decoder[com.github.tizuck.Main.GraphContext] = circe.this.Decoder.importedDecoder[com.github.tizuck.Main.GraphContext]((new io.circe.export.Exported[io.circe.Decoder[com.github.tizuck.Main.GraphContext]]((shapeless.lazily.apply[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphContext]](shapeless.Lazy.apply[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphContext]](anon$importedDecoder$macro$17.this.inst$macro$7)): io.circe.Decoder[com.github.tizuck.Main.GraphContext])): io.circe.export.Exported[io.circe.Decoder[com.github.tizuck.Main.GraphContext]]));
    final def apply(c: io.circe.HCursor): io.circe.Decoder.Result[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ReprDecoder.consResults[io.circe.Decoder.Result, Symbol @@ String("ctx"), com.github.tizuck.Main.GraphContext, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForctx.tryDecode(c.downField("ctx")), ReprDecoder.hnilResult)(io.circe.Decoder.resultInstance);
    final override def decodeAccumulating(c: io.circe.HCursor): io.circe.Decoder.AccumulatingResult[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ReprDecoder.consResults[io.circe.Decoder.AccumulatingResult, Symbol @@ String("ctx"), com.github.tizuck.Main.GraphContext, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForctx.tryDecodeAccumulating(c.downField("ctx")), ReprDecoder.hnilResultAccumulating)(io.circe.Decoder.accumulatingResultInstance)
  };
  new $anon()
}: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]).asInstanceOf[io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]];
      <stable> <accessor> lazy val inst$macro$7: io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphContext] = decoding.this.DerivedDecoder.deriveDecoder[com.github.tizuck.Main.GraphContext, shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](shapeless.this.LabelledGeneric.materializeProduct[com.github.tizuck.Main.GraphContext, (Symbol @@ String("transactionId")) :: (Symbol @@ String("spawnId")) :: shapeless.HNil, Int :: Int :: shapeless.HNil, shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](DefaultSymbolicLabelling.instance[com.github.tizuck.Main.GraphContext, (Symbol @@ String("transactionId")) :: (Symbol @@ String("spawnId")) :: shapeless.HNil](::.apply[Symbol @@ String("transactionId"), (Symbol @@ String("spawnId")) :: shapeless.HNil.type](scala.Symbol.apply("transactionId").asInstanceOf[Symbol @@ String("transactionId")], ::.apply[Symbol @@ String("spawnId"), shapeless.HNil.type](scala.Symbol.apply("spawnId").asInstanceOf[Symbol @@ String("spawnId")], HNil))), Generic.instance[com.github.tizuck.Main.GraphContext, Int :: Int :: shapeless.HNil](((x0$7: com.github.tizuck.Main.GraphContext) => x0$7 match {
  case (transactionId: Int, spawnId: Int): com.github.tizuck.Main.GraphContext((transactionId$macro$14 @ _), (spawnId$macro$15 @ _)) => ::.apply[Int, Int :: shapeless.HNil.type](transactionId$macro$14, ::.apply[Int, shapeless.HNil.type](spawnId$macro$15, HNil)).asInstanceOf[Int :: Int :: shapeless.HNil]
}), ((x0$8: Int :: Int :: shapeless.HNil) => x0$8 match {
  case (head: Int, tail: Int :: shapeless.HNil): Int :: Int :: shapeless.HNil((transactionId$macro$12 @ _), (head: Int, tail: shapeless.HNil): Int :: shapeless.HNil((spawnId$macro$13 @ _), HNil)) => Main.this.GraphContext.apply(transactionId$macro$12, spawnId$macro$13)
})), hlist.this.ZipWithKeys.hconsZipWithKeys[Symbol @@ String("transactionId"), Int, (Symbol @@ String("spawnId")) :: shapeless.HNil, Int :: shapeless.HNil, shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](hlist.this.ZipWithKeys.hconsZipWithKeys[Symbol @@ String("spawnId"), Int, shapeless.HNil, shapeless.HNil, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](hlist.this.ZipWithKeys.hnilZipWithKeys, Witness.mkWitness[Symbol with shapeless.tag.Tagged[String("spawnId")]](scala.Symbol.apply("spawnId").asInstanceOf[Symbol @@ String("spawnId")].asInstanceOf[Symbol with shapeless.tag.Tagged[String("spawnId")]])), Witness.mkWitness[Symbol with shapeless.tag.Tagged[String("transactionId")]](scala.Symbol.apply("transactionId").asInstanceOf[Symbol @@ String("transactionId")].asInstanceOf[Symbol with shapeless.tag.Tagged[String("transactionId")]])), scala.this.<:<.refl[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]), shapeless.Lazy.apply[io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]](anon$importedDecoder$macro$17.this.inst$macro$16)).asInstanceOf[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphContext]];
      <stable> <accessor> lazy val inst$macro$16: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ({
  final class $anon extends io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] {
    def <init>(): <$anon: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]> = {
      $anon.super.<init>();
      ()
    };
    private[this] val circeGenericDecoderForspawnId: io.circe.Decoder[Int] = circe.this.Decoder.decodeInt;
    final def apply(c: io.circe.HCursor): io.circe.Decoder.Result[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ReprDecoder.consResults[io.circe.Decoder.Result, Symbol @@ String("transactionId"), Int, shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForspawnId.tryDecode(c.downField("transactionId")), ReprDecoder.consResults[io.circe.Decoder.Result, Symbol @@ String("spawnId"), Int, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForspawnId.tryDecode(c.downField("spawnId")), ReprDecoder.hnilResult)(io.circe.Decoder.resultInstance))(io.circe.Decoder.resultInstance);
    final override def decodeAccumulating(c: io.circe.HCursor): io.circe.Decoder.AccumulatingResult[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ReprDecoder.consResults[io.circe.Decoder.AccumulatingResult, Symbol @@ String("transactionId"), Int, shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForspawnId.tryDecodeAccumulating(c.downField("transactionId")), ReprDecoder.consResults[io.circe.Decoder.AccumulatingResult, Symbol @@ String("spawnId"), Int, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForspawnId.tryDecodeAccumulating(c.downField("spawnId")), ReprDecoder.hnilResultAccumulating)(io.circe.Decoder.accumulatingResultInstance))(io.circe.Decoder.accumulatingResultInstance)
  };
  new $anon()
}: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]).asInstanceOf[io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]]
    };
    new anon$importedDecoder$macro$17().inst$macro$1
  };
  shapeless.Lazy.apply[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphMetadata]](inst$macro$18)
}): io.circe.Decoder[com.github.tizuck.Main.GraphMetadata])): io.circe.export.Exported[io.circe.Decoder[com.github.tizuck.Main.GraphMetadata]]))

6
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
1618
1618
71
io.circe.Decoder.decodeUnit
Select
false
0
false
circe.this.Decoder.decodeUnit

7
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
1618
1618
71
io.circe.Decoder.decodeUnit
Select
false
0
false
circe.this.Decoder.decodeUnit

8
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
1618
1618
71
com.github.tizuck.jsonGraphSchema.toplevelSingleGraphDecoder
ApplyToImplicitArgs
false
0
false
jsonGraphSchema.toplevelSingleGraphDecoder[com.github.tizuck.Main.GraphMetadata, Unit, Unit, Nothing](circe.this.Decoder.importedDecoder[com.github.tizuck.Main.GraphMetadata]((new io.circe.export.Exported[io.circe.Decoder[com.github.tizuck.Main.GraphMetadata]]((shapeless.lazily.apply[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphMetadata]]({
  val inst$macro$18: io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphMetadata] = {
    final class anon$importedDecoder$macro$17 extends AnyRef with Serializable {
      def <init>(): anon$importedDecoder$macro$17 = {
        anon$importedDecoder$macro$17.super.<init>();
        ()
      };
      <stable> <accessor> lazy val inst$macro$1: io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphMetadata] = decoding.this.DerivedDecoder.deriveDecoder[com.github.tizuck.Main.GraphMetadata, shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](shapeless.this.LabelledGeneric.materializeProduct[com.github.tizuck.Main.GraphMetadata, (Symbol @@ String("ctx")) :: shapeless.HNil, com.github.tizuck.Main.GraphContext :: shapeless.HNil, shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](DefaultSymbolicLabelling.instance[com.github.tizuck.Main.GraphMetadata, (Symbol @@ String("ctx")) :: shapeless.HNil](::.apply[Symbol @@ String("ctx"), shapeless.HNil.type](scala.Symbol.apply("ctx").asInstanceOf[Symbol @@ String("ctx")], HNil)), Generic.instance[com.github.tizuck.Main.GraphMetadata, com.github.tizuck.Main.GraphContext :: shapeless.HNil](((x0$3: com.github.tizuck.Main.GraphMetadata) => x0$3 match {
  case (ctx: com.github.tizuck.Main.GraphContext): com.github.tizuck.Main.GraphMetadata((ctx$macro$5 @ _)) => ::.apply[com.github.tizuck.Main.GraphContext, shapeless.HNil.type](ctx$macro$5, HNil).asInstanceOf[com.github.tizuck.Main.GraphContext :: shapeless.HNil]
}), ((x0$4: com.github.tizuck.Main.GraphContext :: shapeless.HNil) => x0$4 match {
  case (head: com.github.tizuck.Main.GraphContext, tail: shapeless.HNil): com.github.tizuck.Main.GraphContext :: shapeless.HNil((ctx$macro$4 @ _), HNil) => Main.this.GraphMetadata.apply(ctx$macro$4)
})), hlist.this.ZipWithKeys.hconsZipWithKeys[Symbol @@ String("ctx"), com.github.tizuck.Main.GraphContext, shapeless.HNil, shapeless.HNil, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](hlist.this.ZipWithKeys.hnilZipWithKeys, Witness.mkWitness[Symbol with shapeless.tag.Tagged[String("ctx")]](scala.Symbol.apply("ctx").asInstanceOf[Symbol @@ String("ctx")].asInstanceOf[Symbol with shapeless.tag.Tagged[String("ctx")]])), scala.this.<:<.refl[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]), shapeless.Lazy.apply[io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]](anon$importedDecoder$macro$17.this.inst$macro$6)).asInstanceOf[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphMetadata]];
      <stable> <accessor> lazy val inst$macro$6: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ({
  final class $anon extends io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] {
    def <init>(): <$anon: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]> = {
      $anon.super.<init>();
      ()
    };
    private[this] val circeGenericDecoderForctx: io.circe.Decoder[com.github.tizuck.Main.GraphContext] = circe.this.Decoder.importedDecoder[com.github.tizuck.Main.GraphContext]((new io.circe.export.Exported[io.circe.Decoder[com.github.tizuck.Main.GraphContext]]((shapeless.lazily.apply[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphContext]](shapeless.Lazy.apply[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphContext]](anon$importedDecoder$macro$17.this.inst$macro$7)): io.circe.Decoder[com.github.tizuck.Main.GraphContext])): io.circe.export.Exported[io.circe.Decoder[com.github.tizuck.Main.GraphContext]]));
    final def apply(c: io.circe.HCursor): io.circe.Decoder.Result[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ReprDecoder.consResults[io.circe.Decoder.Result, Symbol @@ String("ctx"), com.github.tizuck.Main.GraphContext, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForctx.tryDecode(c.downField("ctx")), ReprDecoder.hnilResult)(io.circe.Decoder.resultInstance);
    final override def decodeAccumulating(c: io.circe.HCursor): io.circe.Decoder.AccumulatingResult[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ReprDecoder.consResults[io.circe.Decoder.AccumulatingResult, Symbol @@ String("ctx"), com.github.tizuck.Main.GraphContext, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForctx.tryDecodeAccumulating(c.downField("ctx")), ReprDecoder.hnilResultAccumulating)(io.circe.Decoder.accumulatingResultInstance)
  };
  new $anon()
}: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]).asInstanceOf[io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]];
      <stable> <accessor> lazy val inst$macro$7: io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphContext] = decoding.this.DerivedDecoder.deriveDecoder[com.github.tizuck.Main.GraphContext, shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](shapeless.this.LabelledGeneric.materializeProduct[com.github.tizuck.Main.GraphContext, (Symbol @@ String("transactionId")) :: (Symbol @@ String("spawnId")) :: shapeless.HNil, Int :: Int :: shapeless.HNil, shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](DefaultSymbolicLabelling.instance[com.github.tizuck.Main.GraphContext, (Symbol @@ String("transactionId")) :: (Symbol @@ String("spawnId")) :: shapeless.HNil](::.apply[Symbol @@ String("transactionId"), (Symbol @@ String("spawnId")) :: shapeless.HNil.type](scala.Symbol.apply("transactionId").asInstanceOf[Symbol @@ String("transactionId")], ::.apply[Symbol @@ String("spawnId"), shapeless.HNil.type](scala.Symbol.apply("spawnId").asInstanceOf[Symbol @@ String("spawnId")], HNil))), Generic.instance[com.github.tizuck.Main.GraphContext, Int :: Int :: shapeless.HNil](((x0$7: com.github.tizuck.Main.GraphContext) => x0$7 match {
  case (transactionId: Int, spawnId: Int): com.github.tizuck.Main.GraphContext((transactionId$macro$14 @ _), (spawnId$macro$15 @ _)) => ::.apply[Int, Int :: shapeless.HNil.type](transactionId$macro$14, ::.apply[Int, shapeless.HNil.type](spawnId$macro$15, HNil)).asInstanceOf[Int :: Int :: shapeless.HNil]
}), ((x0$8: Int :: Int :: shapeless.HNil) => x0$8 match {
  case (head: Int, tail: Int :: shapeless.HNil): Int :: Int :: shapeless.HNil((transactionId$macro$12 @ _), (head: Int, tail: shapeless.HNil): Int :: shapeless.HNil((spawnId$macro$13 @ _), HNil)) => Main.this.GraphContext.apply(transactionId$macro$12, spawnId$macro$13)
})), hlist.this.ZipWithKeys.hconsZipWithKeys[Symbol @@ String("transactionId"), Int, (Symbol @@ String("spawnId")) :: shapeless.HNil, Int :: shapeless.HNil, shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](hlist.this.ZipWithKeys.hconsZipWithKeys[Symbol @@ String("spawnId"), Int, shapeless.HNil, shapeless.HNil, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](hlist.this.ZipWithKeys.hnilZipWithKeys, Witness.mkWitness[Symbol with shapeless.tag.Tagged[String("spawnId")]](scala.Symbol.apply("spawnId").asInstanceOf[Symbol @@ String("spawnId")].asInstanceOf[Symbol with shapeless.tag.Tagged[String("spawnId")]])), Witness.mkWitness[Symbol with shapeless.tag.Tagged[String("transactionId")]](scala.Symbol.apply("transactionId").asInstanceOf[Symbol @@ String("transactionId")].asInstanceOf[Symbol with shapeless.tag.Tagged[String("transactionId")]])), scala.this.<:<.refl[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]), shapeless.Lazy.apply[io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]](anon$importedDecoder$macro$17.this.inst$macro$16)).asInstanceOf[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphContext]];
      <stable> <accessor> lazy val inst$macro$16: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ({
  final class $anon extends io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] {
    def <init>(): <$anon: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]> = {
      $anon.super.<init>();
      ()
    };
    private[this] val circeGenericDecoderForspawnId: io.circe.Decoder[Int] = circe.this.Decoder.decodeInt;
    final def apply(c: io.circe.HCursor): io.circe.Decoder.Result[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ReprDecoder.consResults[io.circe.Decoder.Result, Symbol @@ String("transactionId"), Int, shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForspawnId.tryDecode(c.downField("transactionId")), ReprDecoder.consResults[io.circe.Decoder.Result, Symbol @@ String("spawnId"), Int, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForspawnId.tryDecode(c.downField("spawnId")), ReprDecoder.hnilResult)(io.circe.Decoder.resultInstance))(io.circe.Decoder.resultInstance);
    final override def decodeAccumulating(c: io.circe.HCursor): io.circe.Decoder.AccumulatingResult[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ReprDecoder.consResults[io.circe.Decoder.AccumulatingResult, Symbol @@ String("transactionId"), Int, shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForspawnId.tryDecodeAccumulating(c.downField("transactionId")), ReprDecoder.consResults[io.circe.Decoder.AccumulatingResult, Symbol @@ String("spawnId"), Int, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForspawnId.tryDecodeAccumulating(c.downField("spawnId")), ReprDecoder.hnilResultAccumulating)(io.circe.Decoder.accumulatingResultInstance))(io.circe.Decoder.accumulatingResultInstance)
  };
  new $anon()
}: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]).asInstanceOf[io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]]
    };
    new anon$importedDecoder$macro$17().inst$macro$1
  };
  shapeless.Lazy.apply[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphMetadata]](inst$macro$18)
}): io.circe.Decoder[com.github.tizuck.Main.GraphMetadata])): io.circe.export.Exported[io.circe.Decoder[com.github.tizuck.Main.GraphMetadata]])), circe.this.Decoder.decodeUnit, circe.this.Decoder.decodeUnit)

9
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
1614
1664
71
io.circe.Json.as
ApplyToImplicitArgs
false
0
false
p.as[com.github.tizuck.jsonGraphSchema.TopLevelSingleGraph[com.github.tizuck.Main.GraphMetadata,Unit,Unit]](jsonGraphSchema.toplevelSingleGraphDecoder[com.github.tizuck.Main.GraphMetadata, Unit, Unit, Nothing](circe.this.Decoder.importedDecoder[com.github.tizuck.Main.GraphMetadata]((new io.circe.export.Exported[io.circe.Decoder[com.github.tizuck.Main.GraphMetadata]]((shapeless.lazily.apply[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphMetadata]]({
  val inst$macro$18: io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphMetadata] = {
    final class anon$importedDecoder$macro$17 extends AnyRef with Serializable {
      def <init>(): anon$importedDecoder$macro$17 = {
        anon$importedDecoder$macro$17.super.<init>();
        ()
      };
      <stable> <accessor> lazy val inst$macro$1: io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphMetadata] = decoding.this.DerivedDecoder.deriveDecoder[com.github.tizuck.Main.GraphMetadata, shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](shapeless.this.LabelledGeneric.materializeProduct[com.github.tizuck.Main.GraphMetadata, (Symbol @@ String("ctx")) :: shapeless.HNil, com.github.tizuck.Main.GraphContext :: shapeless.HNil, shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](DefaultSymbolicLabelling.instance[com.github.tizuck.Main.GraphMetadata, (Symbol @@ String("ctx")) :: shapeless.HNil](::.apply[Symbol @@ String("ctx"), shapeless.HNil.type](scala.Symbol.apply("ctx").asInstanceOf[Symbol @@ String("ctx")], HNil)), Generic.instance[com.github.tizuck.Main.GraphMetadata, com.github.tizuck.Main.GraphContext :: shapeless.HNil](((x0$3: com.github.tizuck.Main.GraphMetadata) => x0$3 match {
  case (ctx: com.github.tizuck.Main.GraphContext): com.github.tizuck.Main.GraphMetadata((ctx$macro$5 @ _)) => ::.apply[com.github.tizuck.Main.GraphContext, shapeless.HNil.type](ctx$macro$5, HNil).asInstanceOf[com.github.tizuck.Main.GraphContext :: shapeless.HNil]
}), ((x0$4: com.github.tizuck.Main.GraphContext :: shapeless.HNil) => x0$4 match {
  case (head: com.github.tizuck.Main.GraphContext, tail: shapeless.HNil): com.github.tizuck.Main.GraphContext :: shapeless.HNil((ctx$macro$4 @ _), HNil) => Main.this.GraphMetadata.apply(ctx$macro$4)
})), hlist.this.ZipWithKeys.hconsZipWithKeys[Symbol @@ String("ctx"), com.github.tizuck.Main.GraphContext, shapeless.HNil, shapeless.HNil, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](hlist.this.ZipWithKeys.hnilZipWithKeys, Witness.mkWitness[Symbol with shapeless.tag.Tagged[String("ctx")]](scala.Symbol.apply("ctx").asInstanceOf[Symbol @@ String("ctx")].asInstanceOf[Symbol with shapeless.tag.Tagged[String("ctx")]])), scala.this.<:<.refl[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]), shapeless.Lazy.apply[io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]](anon$importedDecoder$macro$17.this.inst$macro$6)).asInstanceOf[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphMetadata]];
      <stable> <accessor> lazy val inst$macro$6: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ({
  final class $anon extends io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] {
    def <init>(): <$anon: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]> = {
      $anon.super.<init>();
      ()
    };
    private[this] val circeGenericDecoderForctx: io.circe.Decoder[com.github.tizuck.Main.GraphContext] = circe.this.Decoder.importedDecoder[com.github.tizuck.Main.GraphContext]((new io.circe.export.Exported[io.circe.Decoder[com.github.tizuck.Main.GraphContext]]((shapeless.lazily.apply[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphContext]](shapeless.Lazy.apply[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphContext]](anon$importedDecoder$macro$17.this.inst$macro$7)): io.circe.Decoder[com.github.tizuck.Main.GraphContext])): io.circe.export.Exported[io.circe.Decoder[com.github.tizuck.Main.GraphContext]]));
    final def apply(c: io.circe.HCursor): io.circe.Decoder.Result[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ReprDecoder.consResults[io.circe.Decoder.Result, Symbol @@ String("ctx"), com.github.tizuck.Main.GraphContext, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForctx.tryDecode(c.downField("ctx")), ReprDecoder.hnilResult)(io.circe.Decoder.resultInstance);
    final override def decodeAccumulating(c: io.circe.HCursor): io.circe.Decoder.AccumulatingResult[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ReprDecoder.consResults[io.circe.Decoder.AccumulatingResult, Symbol @@ String("ctx"), com.github.tizuck.Main.GraphContext, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForctx.tryDecodeAccumulating(c.downField("ctx")), ReprDecoder.hnilResultAccumulating)(io.circe.Decoder.accumulatingResultInstance)
  };
  new $anon()
}: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]).asInstanceOf[io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]];
      <stable> <accessor> lazy val inst$macro$7: io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphContext] = decoding.this.DerivedDecoder.deriveDecoder[com.github.tizuck.Main.GraphContext, shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](shapeless.this.LabelledGeneric.materializeProduct[com.github.tizuck.Main.GraphContext, (Symbol @@ String("transactionId")) :: (Symbol @@ String("spawnId")) :: shapeless.HNil, Int :: Int :: shapeless.HNil, shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](DefaultSymbolicLabelling.instance[com.github.tizuck.Main.GraphContext, (Symbol @@ String("transactionId")) :: (Symbol @@ String("spawnId")) :: shapeless.HNil](::.apply[Symbol @@ String("transactionId"), (Symbol @@ String("spawnId")) :: shapeless.HNil.type](scala.Symbol.apply("transactionId").asInstanceOf[Symbol @@ String("transactionId")], ::.apply[Symbol @@ String("spawnId"), shapeless.HNil.type](scala.Symbol.apply("spawnId").asInstanceOf[Symbol @@ String("spawnId")], HNil))), Generic.instance[com.github.tizuck.Main.GraphContext, Int :: Int :: shapeless.HNil](((x0$7: com.github.tizuck.Main.GraphContext) => x0$7 match {
  case (transactionId: Int, spawnId: Int): com.github.tizuck.Main.GraphContext((transactionId$macro$14 @ _), (spawnId$macro$15 @ _)) => ::.apply[Int, Int :: shapeless.HNil.type](transactionId$macro$14, ::.apply[Int, shapeless.HNil.type](spawnId$macro$15, HNil)).asInstanceOf[Int :: Int :: shapeless.HNil]
}), ((x0$8: Int :: Int :: shapeless.HNil) => x0$8 match {
  case (head: Int, tail: Int :: shapeless.HNil): Int :: Int :: shapeless.HNil((transactionId$macro$12 @ _), (head: Int, tail: shapeless.HNil): Int :: shapeless.HNil((spawnId$macro$13 @ _), HNil)) => Main.this.GraphContext.apply(transactionId$macro$12, spawnId$macro$13)
})), hlist.this.ZipWithKeys.hconsZipWithKeys[Symbol @@ String("transactionId"), Int, (Symbol @@ String("spawnId")) :: shapeless.HNil, Int :: shapeless.HNil, shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](hlist.this.ZipWithKeys.hconsZipWithKeys[Symbol @@ String("spawnId"), Int, shapeless.HNil, shapeless.HNil, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](hlist.this.ZipWithKeys.hnilZipWithKeys, Witness.mkWitness[Symbol with shapeless.tag.Tagged[String("spawnId")]](scala.Symbol.apply("spawnId").asInstanceOf[Symbol @@ String("spawnId")].asInstanceOf[Symbol with shapeless.tag.Tagged[String("spawnId")]])), Witness.mkWitness[Symbol with shapeless.tag.Tagged[String("transactionId")]](scala.Symbol.apply("transactionId").asInstanceOf[Symbol @@ String("transactionId")].asInstanceOf[Symbol with shapeless.tag.Tagged[String("transactionId")]])), scala.this.<:<.refl[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]), shapeless.Lazy.apply[io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]](anon$importedDecoder$macro$17.this.inst$macro$16)).asInstanceOf[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphContext]];
      <stable> <accessor> lazy val inst$macro$16: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ({
  final class $anon extends io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] {
    def <init>(): <$anon: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]> = {
      $anon.super.<init>();
      ()
    };
    private[this] val circeGenericDecoderForspawnId: io.circe.Decoder[Int] = circe.this.Decoder.decodeInt;
    final def apply(c: io.circe.HCursor): io.circe.Decoder.Result[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ReprDecoder.consResults[io.circe.Decoder.Result, Symbol @@ String("transactionId"), Int, shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForspawnId.tryDecode(c.downField("transactionId")), ReprDecoder.consResults[io.circe.Decoder.Result, Symbol @@ String("spawnId"), Int, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForspawnId.tryDecode(c.downField("spawnId")), ReprDecoder.hnilResult)(io.circe.Decoder.resultInstance))(io.circe.Decoder.resultInstance);
    final override def decodeAccumulating(c: io.circe.HCursor): io.circe.Decoder.AccumulatingResult[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ReprDecoder.consResults[io.circe.Decoder.AccumulatingResult, Symbol @@ String("transactionId"), Int, shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForspawnId.tryDecodeAccumulating(c.downField("transactionId")), ReprDecoder.consResults[io.circe.Decoder.AccumulatingResult, Symbol @@ String("spawnId"), Int, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForspawnId.tryDecodeAccumulating(c.downField("spawnId")), ReprDecoder.hnilResultAccumulating)(io.circe.Decoder.accumulatingResultInstance))(io.circe.Decoder.accumulatingResultInstance)
  };
  new $anon()
}: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]).asInstanceOf[io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]]
    };
    new anon$importedDecoder$macro$17().inst$macro$1
  };
  shapeless.Lazy.apply[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphMetadata]](inst$macro$18)
}): io.circe.Decoder[com.github.tizuck.Main.GraphMetadata])): io.circe.export.Exported[io.circe.Decoder[com.github.tizuck.Main.GraphMetadata]])), circe.this.Decoder.decodeUnit, circe.this.Decoder.decodeUnit))

10
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
1715
1725
75
scala.Predef.println
Apply
false
0
false
scala.Predef.println(f)

11
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
1797
1802
78
scalax.collection.io.dot.Id.apply
Apply
false
0
false
scalax.collection.io.dot.Id.apply(i)

12
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
1777
1803
78
scala.Option.map
Apply
false
0
false
f.graph.id.map[scalax.collection.io.dot.Id](((i: String) => scalax.collection.io.dot.Id.apply(i)))

13
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
1825
1841
79
com.github.tizuck.jsonGraphSchema.Graph.directed
Select
false
0
false
f.graph.directed

14
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
1749
1749
77
scalax.collection.io.dot.DotRootGraph.apply$default$3
Select
false
0
false
scalax.collection.io.dot.DotRootGraph.apply$default$3

15
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
1749
1749
77
scalax.collection.io.dot.DotRootGraph.apply$default$4
Select
false
0
false
scalax.collection.io.dot.DotRootGraph.apply$default$4

16
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
1749
1749
77
scalax.collection.io.dot.DotRootGraph.apply$default$5
Select
false
0
false
scalax.collection.io.dot.DotRootGraph.apply$default$5

17
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
1749
1851
77
scalax.collection.io.dot.DotRootGraph.apply
Apply
false
0
false
scalax.collection.io.dot.DotRootGraph.apply(x$2, x$1, x$3, x$4, x$5)

18
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
1869
1879
82
scalax.collection.io.dot.DotRootGraph.id
Select
false
0
false
dotRoot.id

19
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
1861
1880
82
scala.Predef.println
Apply
false
0
false
scala.Predef.println(dotRoot.id)

20
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
1896
1912
83
scalax.collection.io.dot.DotRootGraph.directed
Select
false
0
false
dotRoot.directed

21
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
1888
1913
83
scala.Predef.println
Apply
false
0
false
scala.Predef.println(dotRoot.directed)

22
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
edgeTransformer
2049
2063
86
scalax.collection.GraphBase.InnerEdge.edge
Select
false
0
false
innerEdge.edge

23
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
edgeTransformer
2272
2294
92
com.github.tizuck.jsonGraphSchema.Node.jsonkey
Select
false
0
false
source.toOuter.jsonkey

24
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
edgeTransformer
2265
2295
92
scalax.collection.io.dot.NodeId.apply
Apply
false
0
false
scalax.collection.io.dot.NodeId.apply(source.toOuter.jsonkey)

25
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
edgeTransformer
2325
2347
93
com.github.tizuck.jsonGraphSchema.Node.jsonkey
Select
false
0
false
target.toOuter.jsonkey

26
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
edgeTransformer
2318
2348
93
scalax.collection.io.dot.NodeId.apply
Apply
false
0
false
scalax.collection.io.dot.NodeId.apply(target.toOuter.jsonkey)

27
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
edgeTransformer
2375
2385
94
scala.collection.StringOps.nonEmpty
Select
false
0
false
scala.Predef.augmentString(l).nonEmpty

28
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
edgeTransformer
2400
2411
94
scalax.collection.io.dot.Id.apply
Apply
false
0
false
scalax.collection.io.dot.Id.apply("label")

29
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
edgeTransformer
2415
2429
94
scala.Any.toString
Apply
false
0
false
label.toString()

30
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
edgeTransformer
2412
2430
94
scalax.collection.io.dot.Id.apply
Apply
false
0
false
scalax.collection.io.dot.Id.apply(label.toString())

31
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
edgeTransformer
2392
2431
94
scalax.collection.io.dot.DotAttr.apply
Apply
false
0
false
scalax.collection.io.dot.DotAttr.apply(scalax.collection.io.dot.Id.apply("label"), scalax.collection.io.dot.Id.apply(label.toString()))

32
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
edgeTransformer
2387
2432
94
scala.collection.IterableFactory.apply
Apply
false
0
false
scala.`package`.List.apply[scalax.collection.io.dot.DotAttr](scalax.collection.io.dot.DotAttr.apply(scalax.collection.io.dot.Id.apply("label"), scalax.collection.io.dot.Id.apply(label.toString())))

33
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
edgeTransformer
2387
2432
94
scala.collection.IterableFactory.apply
Block
true
0
false
scala.`package`.List.apply[scalax.collection.io.dot.DotAttr](scalax.collection.io.dot.DotAttr.apply(scalax.collection.io.dot.Id.apply("label"), scalax.collection.io.dot.Id.apply(label.toString())))

34
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
edgeTransformer
2438
2441
94
scala.Nil
Select
false
0
false
scala.`package`.Nil

35
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
edgeTransformer
2438
2441
94
scala.Nil
Block
true
0
false
scala.`package`.Nil

36
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
edgeTransformer
2231
2463
91
scalax.collection.io.dot.DotEdgeStmt.apply
Apply
false
0
false
scalax.collection.io.dot.DotEdgeStmt.apply(scalax.collection.io.dot.NodeId.apply(source.toOuter.jsonkey), scalax.collection.io.dot.NodeId.apply(target.toOuter.jsonkey), if (scala.Predef.augmentString(l).nonEmpty)
  scala.`package`.List.apply[scalax.collection.io.dot.DotAttr](scalax.collection.io.dot.DotAttr.apply(scalax.collection.io.dot.Id.apply("label"), scalax.collection.io.dot.Id.apply(label.toString())))
else
  scala.`package`.Nil)

37
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
edgeTransformer
2202
2464
90
scala.Tuple2.apply
Apply
false
0
false
scala.Tuple2.apply[scalax.collection.io.dot.DotRootGraph, scalax.collection.io.dot.DotEdgeStmt](dotRoot, scalax.collection.io.dot.DotEdgeStmt.apply(scalax.collection.io.dot.NodeId.apply(source.toOuter.jsonkey), scalax.collection.io.dot.NodeId.apply(target.toOuter.jsonkey), if (scala.Predef.augmentString(l).nonEmpty)
  scala.`package`.List.apply[scalax.collection.io.dot.DotAttr](scalax.collection.io.dot.DotAttr.apply(scalax.collection.io.dot.Id.apply("label"), scalax.collection.io.dot.Id.apply(label.toString())))
else
  scala.`package`.Nil))

38
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
edgeTransformer
2179
2465
89
scala.Some.apply
Apply
false
0
false
scala.Some.apply[(scalax.collection.io.dot.DotRootGraph, scalax.collection.io.dot.DotEdgeStmt)](scala.Tuple2.apply[scalax.collection.io.dot.DotRootGraph, scalax.collection.io.dot.DotEdgeStmt](dotRoot, scalax.collection.io.dot.DotEdgeStmt.apply(scalax.collection.io.dot.NodeId.apply(source.toOuter.jsonkey), scalax.collection.io.dot.NodeId.apply(target.toOuter.jsonkey), if (scala.Predef.augmentString(l).nonEmpty)
  scala.`package`.List.apply[scalax.collection.io.dot.DotAttr](scalax.collection.io.dot.DotAttr.apply(scalax.collection.io.dot.Id.apply("label"), scalax.collection.io.dot.Id.apply(label.toString())))
else
  scala.`package`.Nil)))

39
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
2592
2607
100
com.github.tizuck.Main.edgeTransformer
Apply
false
0
false
edgeTransformer(innerEdge)

40
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
2535
2535
100
com.github.tizuck.dot.DotRepresentation.RepresentationCtx.apply$default$3
TypeApply
false
0
false
dot.DotRepresentation.RepresentationCtx.apply$default$3[com.github.tizuck.jsonGraphSchema.Node[Unit], scalax.collection.edge.LDiEdge]

41
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
2535
2535
100
com.github.tizuck.dot.DotRepresentation.RepresentationCtx.apply$default$4
TypeApply
false
0
false
dot.DotRepresentation.RepresentationCtx.apply$default$4[com.github.tizuck.jsonGraphSchema.Node[Unit], scalax.collection.edge.LDiEdge]

42
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
2535
2535
100
com.github.tizuck.dot.DotRepresentation.RepresentationCtx.apply$default$5
TypeApply
false
0
false
dot.DotRepresentation.RepresentationCtx.apply$default$5[com.github.tizuck.jsonGraphSchema.Node[Unit], scalax.collection.edge.LDiEdge]

43
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
2518
2608
100
com.github.tizuck.dot.DotRepresentation.RepresentationCtx.apply
Apply
false
0
false
dot.DotRepresentation.RepresentationCtx.apply[com.github.tizuck.jsonGraphSchema.Node[Unit], scalax.collection.edge.LDiEdge](dotRoot, ((innerEdge: scalax.collection.Graph[com.github.tizuck.jsonGraphSchema.Node[Unit],scalax.collection.edge.LDiEdge]#EdgeT) => edgeTransformer(innerEdge)), dot.DotRepresentation.RepresentationCtx.apply$default$3[com.github.tizuck.jsonGraphSchema.Node[Unit], scalax.collection.edge.LDiEdge], dot.DotRepresentation.RepresentationCtx.apply$default$4[com.github.tizuck.jsonGraphSchema.Node[Unit], scalax.collection.edge.LDiEdge], dot.DotRepresentation.RepresentationCtx.apply$default$5[com.github.tizuck.jsonGraphSchema.Node[Unit], scalax.collection.edge.LDiEdge])

44
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
2626
2650
102
com.github.tizuck.dot.DotRepresentation.apply
Apply
false
0
false
dot.DotRepresentation.apply[com.github.tizuck.Main.GraphMetadata, Unit, Unit](f, ctx)

45
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
2618
2651
102
scala.Predef.println
Apply
false
0
false
scala.Predef.println(dot.DotRepresentation.apply[com.github.tizuck.Main.GraphMetadata, Unit, Unit](f, ctx))

46
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
1670
2658
73
scala.util.Either.map
Apply
false
0
false
form.map[Unit](((f: com.github.tizuck.jsonGraphSchema.TopLevelSingleGraph[com.github.tizuck.Main.GraphMetadata,Unit,Unit]) => {
  scala.Predef.println(f);
  val dotRoot: scalax.collection.io.dot.DotRootGraph = {
    <artifact> val x$1: Option[scalax.collection.io.dot.Id] = f.graph.id.map[scalax.collection.io.dot.Id](((i: String) => scalax.collection.io.dot.Id.apply(i)));
    <artifact> val x$2: Boolean = f.graph.directed;
    <artifact> val x$3: Boolean = scalax.collection.io.dot.DotRootGraph.apply$default$3;
    <artifact> val x$4: Seq[scalax.collection.io.dot.DotAttrStmt] = scalax.collection.io.dot.DotRootGraph.apply$default$4;
    <artifact> val x$5: Seq[scalax.collection.io.dot.DotAttr] = scalax.collection.io.dot.DotRootGraph.apply$default$5;
    scalax.collection.io.dot.DotRootGraph.apply(x$2, x$1, x$3, x$4, x$5)
  };
  scala.Predef.println(dotRoot.id);
  scala.Predef.println(dotRoot.directed);
  def edgeTransformer(innerEdge: scalax.collection.Graph[com.github.tizuck.jsonGraphSchema.Node[Unit],scalax.collection.edge.LDiEdge]#EdgeT): Option[(scalax.collection.io.dot.DotGraph, scalax.collection.io.dot.DotEdgeStmt)] = innerEdge.edge match {
    case scalax.collection.edge.LDiEdge.unapply[scalax.collection.Graph[com.github.tizuck.jsonGraphSchema.Node[Unit],scalax.collection.edge.LDiEdge]#NodeT](<unapply-selector>) <unapply> ((source @ _), (target @ _), (label @ _)) => label match {
      case (l @ (_: String)) => scala.Some.apply[(scalax.collection.io.dot.DotRootGraph, scalax.collection.io.dot.DotEdgeStmt)](scala.Tuple2.apply[scalax.collection.io.dot.DotRootGraph, scalax.collection.io.dot.DotEdgeStmt](dotRoot, scalax.collection.io.dot.DotEdgeStmt.apply(scalax.collection.io.dot.NodeId.apply(source.toOuter.jsonkey), scalax.collection.io.dot.NodeId.apply(target.toOuter.jsonkey), if (scala.Predef.augmentString(l).nonEmpty)
        scala.`package`.List.apply[scalax.collection.io.dot.DotAttr](scalax.collection.io.dot.DotAttr.apply(scalax.collection.io.dot.Id.apply("label"), scalax.collection.io.dot.Id.apply(label.toString())))
      else
        scala.`package`.Nil)))
    }
  };
  val ctx: com.github.tizuck.dot.DotRepresentation.RepresentationCtx[com.github.tizuck.jsonGraphSchema.Node[Unit],scalax.collection.edge.LDiEdge] = dot.DotRepresentation.RepresentationCtx.apply[com.github.tizuck.jsonGraphSchema.Node[Unit], scalax.collection.edge.LDiEdge](dotRoot, ((innerEdge: scalax.collection.Graph[com.github.tizuck.jsonGraphSchema.Node[Unit],scalax.collection.edge.LDiEdge]#EdgeT) => edgeTransformer(innerEdge)), dot.DotRepresentation.RepresentationCtx.apply$default$3[com.github.tizuck.jsonGraphSchema.Node[Unit], scalax.collection.edge.LDiEdge], dot.DotRepresentation.RepresentationCtx.apply$default$4[com.github.tizuck.jsonGraphSchema.Node[Unit], scalax.collection.edge.LDiEdge], dot.DotRepresentation.RepresentationCtx.apply$default$5[com.github.tizuck.jsonGraphSchema.Node[Unit], scalax.collection.edge.LDiEdge]);
  scala.Predef.println(dot.DotRepresentation.apply[com.github.tizuck.Main.GraphMetadata, Unit, Unit](f, ctx))
}))

47
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\Main.scala
com.github.tizuck
Main
Object
com.github.tizuck.Main
<none>
1557
2663
69
scala.util.Either.map
Apply
false
0
false
Main.this.parseResult.map[scala.util.Either[io.circe.DecodingFailure,Unit]](((p: io.circe.Json) => {
  val form: io.circe.Decoder.Result[com.github.tizuck.jsonGraphSchema.TopLevelSingleGraph[com.github.tizuck.Main.GraphMetadata,Unit,Unit]] = p.as[com.github.tizuck.jsonGraphSchema.TopLevelSingleGraph[com.github.tizuck.Main.GraphMetadata,Unit,Unit]](jsonGraphSchema.toplevelSingleGraphDecoder[com.github.tizuck.Main.GraphMetadata, Unit, Unit, Nothing](circe.this.Decoder.importedDecoder[com.github.tizuck.Main.GraphMetadata]((new io.circe.export.Exported[io.circe.Decoder[com.github.tizuck.Main.GraphMetadata]]((shapeless.lazily.apply[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphMetadata]]({
    val inst$macro$18: io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphMetadata] = {
      final class anon$importedDecoder$macro$17 extends AnyRef with Serializable {
        def <init>(): anon$importedDecoder$macro$17 = {
          anon$importedDecoder$macro$17.super.<init>();
          ()
        };
        <stable> <accessor> lazy val inst$macro$1: io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphMetadata] = decoding.this.DerivedDecoder.deriveDecoder[com.github.tizuck.Main.GraphMetadata, shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](shapeless.this.LabelledGeneric.materializeProduct[com.github.tizuck.Main.GraphMetadata, (Symbol @@ String("ctx")) :: shapeless.HNil, com.github.tizuck.Main.GraphContext :: shapeless.HNil, shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](DefaultSymbolicLabelling.instance[com.github.tizuck.Main.GraphMetadata, (Symbol @@ String("ctx")) :: shapeless.HNil](::.apply[Symbol @@ String("ctx"), shapeless.HNil.type](scala.Symbol.apply("ctx").asInstanceOf[Symbol @@ String("ctx")], HNil)), Generic.instance[com.github.tizuck.Main.GraphMetadata, com.github.tizuck.Main.GraphContext :: shapeless.HNil](((x0$3: com.github.tizuck.Main.GraphMetadata) => x0$3 match {
  case (ctx: com.github.tizuck.Main.GraphContext): com.github.tizuck.Main.GraphMetadata((ctx$macro$5 @ _)) => ::.apply[com.github.tizuck.Main.GraphContext, shapeless.HNil.type](ctx$macro$5, HNil).asInstanceOf[com.github.tizuck.Main.GraphContext :: shapeless.HNil]
}), ((x0$4: com.github.tizuck.Main.GraphContext :: shapeless.HNil) => x0$4 match {
  case (head: com.github.tizuck.Main.GraphContext, tail: shapeless.HNil): com.github.tizuck.Main.GraphContext :: shapeless.HNil((ctx$macro$4 @ _), HNil) => Main.this.GraphMetadata.apply(ctx$macro$4)
})), hlist.this.ZipWithKeys.hconsZipWithKeys[Symbol @@ String("ctx"), com.github.tizuck.Main.GraphContext, shapeless.HNil, shapeless.HNil, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](hlist.this.ZipWithKeys.hnilZipWithKeys, Witness.mkWitness[Symbol with shapeless.tag.Tagged[String("ctx")]](scala.Symbol.apply("ctx").asInstanceOf[Symbol @@ String("ctx")].asInstanceOf[Symbol with shapeless.tag.Tagged[String("ctx")]])), scala.this.<:<.refl[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]), shapeless.Lazy.apply[io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]](anon$importedDecoder$macro$17.this.inst$macro$6)).asInstanceOf[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphMetadata]];
        <stable> <accessor> lazy val inst$macro$6: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ({
  final class $anon extends io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] {
    def <init>(): <$anon: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]> = {
      $anon.super.<init>();
      ()
    };
    private[this] val circeGenericDecoderForctx: io.circe.Decoder[com.github.tizuck.Main.GraphContext] = circe.this.Decoder.importedDecoder[com.github.tizuck.Main.GraphContext]((new io.circe.export.Exported[io.circe.Decoder[com.github.tizuck.Main.GraphContext]]((shapeless.lazily.apply[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphContext]](shapeless.Lazy.apply[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphContext]](anon$importedDecoder$macro$17.this.inst$macro$7)): io.circe.Decoder[com.github.tizuck.Main.GraphContext])): io.circe.export.Exported[io.circe.Decoder[com.github.tizuck.Main.GraphContext]]));
    final def apply(c: io.circe.HCursor): io.circe.Decoder.Result[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ReprDecoder.consResults[io.circe.Decoder.Result, Symbol @@ String("ctx"), com.github.tizuck.Main.GraphContext, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForctx.tryDecode(c.downField("ctx")), ReprDecoder.hnilResult)(io.circe.Decoder.resultInstance);
    final override def decodeAccumulating(c: io.circe.HCursor): io.circe.Decoder.AccumulatingResult[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ReprDecoder.consResults[io.circe.Decoder.AccumulatingResult, Symbol @@ String("ctx"), com.github.tizuck.Main.GraphContext, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForctx.tryDecodeAccumulating(c.downField("ctx")), ReprDecoder.hnilResultAccumulating)(io.circe.Decoder.accumulatingResultInstance)
  };
  new $anon()
}: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]).asInstanceOf[io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("ctx"),com.github.tizuck.Main.GraphContext] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]];
        <stable> <accessor> lazy val inst$macro$7: io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphContext] = decoding.this.DerivedDecoder.deriveDecoder[com.github.tizuck.Main.GraphContext, shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](shapeless.this.LabelledGeneric.materializeProduct[com.github.tizuck.Main.GraphContext, (Symbol @@ String("transactionId")) :: (Symbol @@ String("spawnId")) :: shapeless.HNil, Int :: Int :: shapeless.HNil, shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](DefaultSymbolicLabelling.instance[com.github.tizuck.Main.GraphContext, (Symbol @@ String("transactionId")) :: (Symbol @@ String("spawnId")) :: shapeless.HNil](::.apply[Symbol @@ String("transactionId"), (Symbol @@ String("spawnId")) :: shapeless.HNil.type](scala.Symbol.apply("transactionId").asInstanceOf[Symbol @@ String("transactionId")], ::.apply[Symbol @@ String("spawnId"), shapeless.HNil.type](scala.Symbol.apply("spawnId").asInstanceOf[Symbol @@ String("spawnId")], HNil))), Generic.instance[com.github.tizuck.Main.GraphContext, Int :: Int :: shapeless.HNil](((x0$7: com.github.tizuck.Main.GraphContext) => x0$7 match {
  case (transactionId: Int, spawnId: Int): com.github.tizuck.Main.GraphContext((transactionId$macro$14 @ _), (spawnId$macro$15 @ _)) => ::.apply[Int, Int :: shapeless.HNil.type](transactionId$macro$14, ::.apply[Int, shapeless.HNil.type](spawnId$macro$15, HNil)).asInstanceOf[Int :: Int :: shapeless.HNil]
}), ((x0$8: Int :: Int :: shapeless.HNil) => x0$8 match {
  case (head: Int, tail: Int :: shapeless.HNil): Int :: Int :: shapeless.HNil((transactionId$macro$12 @ _), (head: Int, tail: shapeless.HNil): Int :: shapeless.HNil((spawnId$macro$13 @ _), HNil)) => Main.this.GraphContext.apply(transactionId$macro$12, spawnId$macro$13)
})), hlist.this.ZipWithKeys.hconsZipWithKeys[Symbol @@ String("transactionId"), Int, (Symbol @@ String("spawnId")) :: shapeless.HNil, Int :: shapeless.HNil, shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](hlist.this.ZipWithKeys.hconsZipWithKeys[Symbol @@ String("spawnId"), Int, shapeless.HNil, shapeless.HNil, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out](hlist.this.ZipWithKeys.hnilZipWithKeys, Witness.mkWitness[Symbol with shapeless.tag.Tagged[String("spawnId")]](scala.Symbol.apply("spawnId").asInstanceOf[Symbol @@ String("spawnId")].asInstanceOf[Symbol with shapeless.tag.Tagged[String("spawnId")]])), Witness.mkWitness[Symbol with shapeless.tag.Tagged[String("transactionId")]](scala.Symbol.apply("transactionId").asInstanceOf[Symbol @@ String("transactionId")].asInstanceOf[Symbol with shapeless.tag.Tagged[String("transactionId")]])), scala.this.<:<.refl[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]), shapeless.Lazy.apply[io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]](anon$importedDecoder$macro$17.this.inst$macro$16)).asInstanceOf[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphContext]];
        <stable> <accessor> lazy val inst$macro$16: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ({
  final class $anon extends io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] {
    def <init>(): <$anon: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]> = {
      $anon.super.<init>();
      ()
    };
    private[this] val circeGenericDecoderForspawnId: io.circe.Decoder[Int] = circe.this.Decoder.decodeInt;
    final def apply(c: io.circe.HCursor): io.circe.Decoder.Result[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ReprDecoder.consResults[io.circe.Decoder.Result, Symbol @@ String("transactionId"), Int, shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForspawnId.tryDecode(c.downField("transactionId")), ReprDecoder.consResults[io.circe.Decoder.Result, Symbol @@ String("spawnId"), Int, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForspawnId.tryDecode(c.downField("spawnId")), ReprDecoder.hnilResult)(io.circe.Decoder.resultInstance))(io.circe.Decoder.resultInstance);
    final override def decodeAccumulating(c: io.circe.HCursor): io.circe.Decoder.AccumulatingResult[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out] = ReprDecoder.consResults[io.circe.Decoder.AccumulatingResult, Symbol @@ String("transactionId"), Int, shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForspawnId.tryDecodeAccumulating(c.downField("transactionId")), ReprDecoder.consResults[io.circe.Decoder.AccumulatingResult, Symbol @@ String("spawnId"), Int, shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]($anon.this.circeGenericDecoderForspawnId.tryDecodeAccumulating(c.downField("spawnId")), ReprDecoder.hnilResultAccumulating)(io.circe.Decoder.accumulatingResultInstance))(io.circe.Decoder.accumulatingResultInstance)
  };
  new $anon()
}: io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]).asInstanceOf[io.circe.generic.decoding.ReprDecoder[shapeless.labelled.FieldType[Symbol @@ String("transactionId"),Int] :: shapeless.labelled.FieldType[Symbol @@ String("spawnId"),Int] :: shapeless.ops.hlist.ZipWithKeys.hnilZipWithKeys.Out]]
      };
      new anon$importedDecoder$macro$17().inst$macro$1
    };
    shapeless.Lazy.apply[io.circe.generic.decoding.DerivedDecoder[com.github.tizuck.Main.GraphMetadata]](inst$macro$18)
  }): io.circe.Decoder[com.github.tizuck.Main.GraphMetadata])): io.circe.export.Exported[io.circe.Decoder[com.github.tizuck.Main.GraphMetadata]])), circe.this.Decoder.decodeUnit, circe.this.Decoder.decodeUnit));
  form.map[Unit](((f: com.github.tizuck.jsonGraphSchema.TopLevelSingleGraph[com.github.tizuck.Main.GraphMetadata,Unit,Unit]) => {
    scala.Predef.println(f);
    val dotRoot: scalax.collection.io.dot.DotRootGraph = {
      <artifact> val x$1: Option[scalax.collection.io.dot.Id] = f.graph.id.map[scalax.collection.io.dot.Id](((i: String) => scalax.collection.io.dot.Id.apply(i)));
      <artifact> val x$2: Boolean = f.graph.directed;
      <artifact> val x$3: Boolean = scalax.collection.io.dot.DotRootGraph.apply$default$3;
      <artifact> val x$4: Seq[scalax.collection.io.dot.DotAttrStmt] = scalax.collection.io.dot.DotRootGraph.apply$default$4;
      <artifact> val x$5: Seq[scalax.collection.io.dot.DotAttr] = scalax.collection.io.dot.DotRootGraph.apply$default$5;
      scalax.collection.io.dot.DotRootGraph.apply(x$2, x$1, x$3, x$4, x$5)
    };
    scala.Predef.println(dotRoot.id);
    scala.Predef.println(dotRoot.directed);
    def edgeTransformer(innerEdge: scalax.collection.Graph[com.github.tizuck.jsonGraphSchema.Node[Unit],scalax.collection.edge.LDiEdge]#EdgeT): Option[(scalax.collection.io.dot.DotGraph, scalax.collection.io.dot.DotEdgeStmt)] = innerEdge.edge match {
      case scalax.collection.edge.LDiEdge.unapply[scalax.collection.Graph[com.github.tizuck.jsonGraphSchema.Node[Unit],scalax.collection.edge.LDiEdge]#NodeT](<unapply-selector>) <unapply> ((source @ _), (target @ _), (label @ _)) => label match {
        case (l @ (_: String)) => scala.Some.apply[(scalax.collection.io.dot.DotRootGraph, scalax.collection.io.dot.DotEdgeStmt)](scala.Tuple2.apply[scalax.collection.io.dot.DotRootGraph, scalax.collection.io.dot.DotEdgeStmt](dotRoot, scalax.collection.io.dot.DotEdgeStmt.apply(scalax.collection.io.dot.NodeId.apply(source.toOuter.jsonkey), scalax.collection.io.dot.NodeId.apply(target.toOuter.jsonkey), if (scala.Predef.augmentString(l).nonEmpty)
          scala.`package`.List.apply[scalax.collection.io.dot.DotAttr](scalax.collection.io.dot.DotAttr.apply(scalax.collection.io.dot.Id.apply("label"), scalax.collection.io.dot.Id.apply(label.toString())))
        else
          scala.`package`.Nil)))
      }
    };
    val ctx: com.github.tizuck.dot.DotRepresentation.RepresentationCtx[com.github.tizuck.jsonGraphSchema.Node[Unit],scalax.collection.edge.LDiEdge] = dot.DotRepresentation.RepresentationCtx.apply[com.github.tizuck.jsonGraphSchema.Node[Unit], scalax.collection.edge.LDiEdge](dotRoot, ((innerEdge: scalax.collection.Graph[com.github.tizuck.jsonGraphSchema.Node[Unit],scalax.collection.edge.LDiEdge]#EdgeT) => edgeTransformer(innerEdge)), dot.DotRepresentation.RepresentationCtx.apply$default$3[com.github.tizuck.jsonGraphSchema.Node[Unit], scalax.collection.edge.LDiEdge], dot.DotRepresentation.RepresentationCtx.apply$default$4[com.github.tizuck.jsonGraphSchema.Node[Unit], scalax.collection.edge.LDiEdge], dot.DotRepresentation.RepresentationCtx.apply$default$5[com.github.tizuck.jsonGraphSchema.Node[Unit], scalax.collection.edge.LDiEdge]);
    scala.Predef.println(dot.DotRepresentation.apply[com.github.tizuck.Main.GraphMetadata, Unit, Unit](f, ctx))
  }))
}))

48
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
toScalaGraph
977
994
24
com.github.tizuck.jsonGraphSchema.Nodes.nodes
Select
false
0
false
graph.nodes.nodes

49
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
toScalaGraph
1154
1162
29
com.github.tizuck.jsonGraphSchema.SimpleEdge.source
Select
false
0
false
e.source

50
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
toScalaGraph
1137
1163
29
java.lang.String.equals
Apply
false
0
false
p.jsonkey.equals(e.source)

51
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
toScalaGraph
1121
1168
29
scala.Option.get
Select
false
0
false
nodes.find(((p: com.github.tizuck.jsonGraphSchema.Node[M2]) => p.jsonkey.equals(e.source))).get

52
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
toScalaGraph
1233
1241
30
com.github.tizuck.jsonGraphSchema.SimpleEdge.target
Select
false
0
false
e.target

53
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
toScalaGraph
1216
1242
30
java.lang.String.equals
Apply
false
0
false
p.jsonkey.equals(e.target)

54
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
toScalaGraph
1200
1247
30
scala.Option.get
Select
false
0
false
nodes.find(((p: com.github.tizuck.jsonGraphSchema.Node[M2]) => p.jsonkey.equals(e.target))).get

55
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
toScalaGraph
1278
1299
32
scala.Option.getOrElse
Apply
false
0
false
e.label.getOrElse[String]("")

56
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
toScalaGraph
1259
1300
32
scalax.collection.edge.Implicits.XEdgeAssoc.~+>
Apply
false
0
false
scalax.collection.edge.Implicits.any2XEdgeAssoc[com.github.tizuck.jsonGraphSchema.Node[M2]](node1).~+>[com.github.tizuck.jsonGraphSchema.Node[M2], com.github.tizuck.jsonGraphSchema.Node[M2], String](node2)(e.label.getOrElse[String](""))

57
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
toScalaGraph
1067
1309
28
scala.collection.immutable.List.map
Apply
false
0
false
graph.edges.map[scalax.collection.edge.LDiEdge[com.github.tizuck.jsonGraphSchema.Node[M2]] with scalax.collection.GraphEdge.EdgeCopy[scalax.collection.edge.LDiEdge]{type L1 = String}](((e: com.github.tizuck.jsonGraphSchema.SimpleEdge[M3]) => {
  val node1: com.github.tizuck.jsonGraphSchema.Node[M2] = nodes.find(((p: com.github.tizuck.jsonGraphSchema.Node[M2]) => p.jsonkey.equals(e.source))).get;
  val node2: com.github.tizuck.jsonGraphSchema.Node[M2] = nodes.find(((p: com.github.tizuck.jsonGraphSchema.Node[M2]) => p.jsonkey.equals(e.target))).get;
  scalax.collection.edge.Implicits.any2XEdgeAssoc[com.github.tizuck.jsonGraphSchema.Node[M2]](node1).~+>[com.github.tizuck.jsonGraphSchema.Node[M2], com.github.tizuck.jsonGraphSchema.Node[M2], String](node2)(e.label.getOrElse[String](""))
}))

58
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
toScalaGraph
1360
1360
35
scalax.collection.generic.GraphCoreCompanion.apply$default$3
Apply
false
0
false
scalax.collection.Graph.apply$default$3[com.github.tizuck.jsonGraphSchema.Node[M2], scalax.collection.edge.LDiEdge]((x$1: _*))

59
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
toScalaGraph
1319
1372
35
scalax.collection.generic.GraphCoreCompanion.apply
ApplyToImplicitArgs
false
0
false
scalax.collection.Graph.apply[com.github.tizuck.jsonGraphSchema.Node[M2], scalax.collection.edge.LDiEdge]((x$1: _*))(x$2, x$3)

60
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
toScalaGraph
1426
1440
39
com.github.tizuck.jsonGraphSchema.TopLevelSingleGraph.graph
Select
false
0
false
topLevel.graph

61
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
apply
1567
1582
42
com.github.tizuck.dot.DotRepresentation.toScalaGraph
Apply
false
0
false
toScalaGraph(s)

62
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
apply
1567
1582
42
scalax.collection.io.dot.graph2DotExport
ApplyImplicitView
false
0
false
scalax.collection.io.dot.`package`.graph2DotExport[com.github.tizuck.jsonGraphSchema.Node[M2], [+N]scalax.collection.edge.LDiEdge[N]](toScalaGraph(s))

63
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
apply
1589
1614
42
com.github.tizuck.dot.DotRepresentation.RepresentationCtx.dotRoot
Select
false
0
false
representationCtx.dotRoot

64
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
apply
1616
1649
42
com.github.tizuck.dot.DotRepresentation.RepresentationCtx.edgeTransformer
Select
false
0
false
representationCtx.edgeTransformer

65
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
apply
1583
1583
42
scalax.collection.io.dot.Export.toDot$default$3
Select
false
0
false
qual$1.toDot$default$3

66
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
apply
1583
1583
42
scalax.collection.io.dot.Export.toDot$default$4
Select
false
0
false
qual$1.toDot$default$4

67
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
apply
1583
1583
42
scalax.collection.io.dot.Export.toDot$default$5
Select
false
0
false
qual$1.toDot$default$5

68
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
apply
1583
1583
42
scalax.collection.io.dot.Export.toDot$default$6
Select
false
0
false
qual$1.toDot$default$6

69
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
apply
1567
1650
42
scalax.collection.io.dot.Export.toDot
Apply
false
0
false
qual$1.toDot(x$1, x$2, x$3, x$4, x$5, x$6)

70
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
apply
1537
1661
41
com.github.tizuck.dot.DotRepresentation.apply
Apply
false
0
false
DotRepresentation.apply({
  <artifact> val qual$1: scalax.collection.io.dot.Export[com.github.tizuck.jsonGraphSchema.Node[M2],[+N]scalax.collection.edge.LDiEdge[N]] = scalax.collection.io.dot.`package`.graph2DotExport[com.github.tizuck.jsonGraphSchema.Node[M2], [+N]scalax.collection.edge.LDiEdge[N]](toScalaGraph(s));
  <artifact> val x$1: scalax.collection.io.dot.DotRootGraph = representationCtx.dotRoot;
  <artifact> val x$2: scalax.collection.io.dot.EdgeTransformer[com.github.tizuck.jsonGraphSchema.Node[M2],scalax.collection.edge.LDiEdge] = representationCtx.edgeTransformer;
  <artifact> val x$3: Option[scalax.collection.io.dot.HyperEdgeTransformer[com.github.tizuck.jsonGraphSchema.Node[M2],[+N]scalax.collection.edge.LDiEdge[N]]] = qual$1.toDot$default$3;
  <artifact> val x$4: Option[scalax.collection.io.dot.NodeTransformer[com.github.tizuck.jsonGraphSchema.Node[M2],[+N]scalax.collection.edge.LDiEdge[N]]] = qual$1.toDot$default$4;
  <artifact> val x$5: Option[scalax.collection.io.dot.NodeTransformer[com.github.tizuck.jsonGraphSchema.Node[M2],[+N]scalax.collection.edge.LDiEdge[N]]] = qual$1.toDot$default$5;
  <artifact> val x$6: scalax.collection.io.dot.Spacing = qual$1.toDot$default$6;
  qual$1.toDot(x$1, x$2, x$3, x$4, x$5, x$6)
})

71
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
apply
1762
1793
44
<nosymbol>
Throw
false
0
false
throw new scala.NotImplementedError()

72
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\dot\DotRepresentation.scala
com.github.tizuck.dot
DotRepresentation
Object
com.github.tizuck.dot.DotRepresentation
apply
1896
1927
45
<nosymbol>
Throw
false
0
false
throw new scala.NotImplementedError()

73
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
toplevelSingleGraphDecoder
5155
5162
107
<nosymbol>
Literal
false
0
false
"graph"

74
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
toplevelSingleGraphDecoder
5166
5166
107
com.github.tizuck.jsonGraphSchema.graphDecoder
ApplyToImplicitArgs
false
0
false
jsonGraphSchema.this.graphDecoder[M1, M2, M3](t1decoder, t2decoder, t3decoder)

75
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
toplevelSingleGraphDecoder
5210
5236
109
com.github.tizuck.jsonGraphSchema.TopLevelSingleGraph.apply
Apply
false
0
false
jsonGraphSchema.this.TopLevelSingleGraph.apply[M1, M2, M3](graph)

76
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
toplevelSingleGraphDecoder
5119
5236
107
scala.util.Either.map
Apply
false
0
false
c.downField("graph").as[com.github.tizuck.jsonGraphSchema.Graph[M1,M2,M3]](jsonGraphSchema.this.graphDecoder[M1, M2, M3](t1decoder, t2decoder, t3decoder)).map[com.github.tizuck.jsonGraphSchema.TopLevelSingleGraph[M1,M2,M3]](((graph: com.github.tizuck.jsonGraphSchema.Graph[M1,M2,M3]) => jsonGraphSchema.this.TopLevelSingleGraph.apply[M1, M2, M3](graph)))

77
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
topLevelMultipleGraphsDecoder
5640
5648
120
<nosymbol>
Literal
false
0
false
"graphs"

78
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
topLevelMultipleGraphsDecoder
5652
5652
120
com.github.tizuck.jsonGraphSchema.graphDecoder
ApplyToImplicitArgs
false
0
false
jsonGraphSchema.this.graphDecoder[M1, M2, M3](t1decoder, t2decoder, t3decoder)

79
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
topLevelMultipleGraphsDecoder
5652
5652
120
io.circe.Decoder.decodeList
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.Graph[M1,M2,M3]](jsonGraphSchema.this.graphDecoder[M1, M2, M3](t1decoder, t2decoder, t3decoder))

80
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
topLevelMultipleGraphsDecoder
5702
5732
122
com.github.tizuck.jsonGraphSchema.TopLevelMultipleGraphs.apply
Apply
false
0
false
jsonGraphSchema.this.TopLevelMultipleGraphs.apply[M1, M2, M3](graphs)

81
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
topLevelMultipleGraphsDecoder
5603
5732
120
scala.util.Either.map
Apply
false
0
false
c.downField("graphs").as[List[com.github.tizuck.jsonGraphSchema.Graph[M1,M2,M3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.Graph[M1,M2,M3]](jsonGraphSchema.this.graphDecoder[M1, M2, M3](t1decoder, t2decoder, t3decoder))).map[com.github.tizuck.jsonGraphSchema.TopLevelMultipleGraphs[M1,M2,M3]](((graphs: List[com.github.tizuck.jsonGraphSchema.Graph[M1,M2,M3]]) => jsonGraphSchema.this.TopLevelMultipleGraphs.apply[M1, M2, M3](graphs)))

82
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
edgeDecoder
5950
5950
131
com.github.tizuck.jsonGraphSchema.simpleEdgeDecoder
ApplyToImplicitArgs
false
0
false
jsonGraphSchema.this.simpleEdgeDecoder[T](tDecoder)

83
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
edgeDecoder
5943
5965
131
io.circe.Decoder.apply
ApplyToImplicitArgs
false
0
false
io.circe.Decoder.apply[com.github.tizuck.jsonGraphSchema.SimpleEdge[T]](jsonGraphSchema.this.simpleEdgeDecoder[T](tDecoder))

84
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
edgeDecoder
5950
5950
131
io.circe.Decoder.decoderInstances
Select
false
0
false
circe.this.Decoder.decoderInstances

85
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
edgeDecoder
5943
5971
131
cats.Functor.Ops.widen
TypeApply
false
0
false
cats.syntax.`package`.functor.toFunctorOps[io.circe.Decoder, com.github.tizuck.jsonGraphSchema.SimpleEdge[T]](io.circe.Decoder.apply[com.github.tizuck.jsonGraphSchema.SimpleEdge[T]](jsonGraphSchema.this.simpleEdgeDecoder[T](tDecoder)))(circe.this.Decoder.decoderInstances).widen[com.github.tizuck.jsonGraphSchema.Edge[T]]

86
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
edgeDecoder
5989
5989
132
com.github.tizuck.jsonGraphSchema.directedHyperEdge
ApplyToImplicitArgs
false
0
false
jsonGraphSchema.this.directedHyperEdge[T](tDecoder)

87
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
edgeDecoder
5982
6011
132
io.circe.Decoder.apply
ApplyToImplicitArgs
false
0
false
io.circe.Decoder.apply[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](jsonGraphSchema.this.directedHyperEdge[T](tDecoder))

88
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
edgeDecoder
5989
5989
132
io.circe.Decoder.decoderInstances
Select
false
0
false
circe.this.Decoder.decoderInstances

89
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
edgeDecoder
5982
6017
132
cats.Functor.Ops.widen
TypeApply
false
0
false
cats.syntax.`package`.functor.toFunctorOps[io.circe.Decoder, com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](io.circe.Decoder.apply[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](jsonGraphSchema.this.directedHyperEdge[T](tDecoder)))(circe.this.Decoder.decoderInstances).widen[com.github.tizuck.jsonGraphSchema.Edge[T]]

90
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
edgeDecoder
6035
6035
133
com.github.tizuck.jsonGraphSchema.undirectedHyperEdge
ApplyToImplicitArgs
false
0
false
jsonGraphSchema.this.undirectedHyperEdge[T](tDecoder)

91
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
edgeDecoder
6028
6059
133
io.circe.Decoder.apply
ApplyToImplicitArgs
false
0
false
io.circe.Decoder.apply[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](jsonGraphSchema.this.undirectedHyperEdge[T](tDecoder))

92
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
edgeDecoder
6035
6035
133
io.circe.Decoder.decoderInstances
Select
false
0
false
circe.this.Decoder.decoderInstances

93
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
edgeDecoder
6028
6065
133
cats.Functor.Ops.widen
TypeApply
false
0
false
cats.syntax.`package`.functor.toFunctorOps[io.circe.Decoder, com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](io.circe.Decoder.apply[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](jsonGraphSchema.this.undirectedHyperEdge[T](tDecoder)))(circe.this.Decoder.decoderInstances).widen[com.github.tizuck.jsonGraphSchema.Edge[T]]

94
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
edgeDecoder
5910
6074
130
scala.collection.IterableFactory.apply
Apply
false
0
false
scala.`package`.List.apply[io.circe.Decoder[com.github.tizuck.jsonGraphSchema.Edge[T]]](cats.syntax.`package`.functor.toFunctorOps[io.circe.Decoder, com.github.tizuck.jsonGraphSchema.SimpleEdge[T]](io.circe.Decoder.apply[com.github.tizuck.jsonGraphSchema.SimpleEdge[T]](jsonGraphSchema.this.simpleEdgeDecoder[T](tDecoder)))(circe.this.Decoder.decoderInstances).widen[com.github.tizuck.jsonGraphSchema.Edge[T]], cats.syntax.`package`.functor.toFunctorOps[io.circe.Decoder, com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](io.circe.Decoder.apply[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](jsonGraphSchema.this.directedHyperEdge[T](tDecoder)))(circe.this.Decoder.decoderInstances).widen[com.github.tizuck.jsonGraphSchema.Edge[T]], cats.syntax.`package`.functor.toFunctorOps[io.circe.Decoder, com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](io.circe.Decoder.apply[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](jsonGraphSchema.this.undirectedHyperEdge[T](tDecoder)))(circe.this.Decoder.decoderInstances).widen[com.github.tizuck.jsonGraphSchema.Edge[T]])

95
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
edgeDecoder
6095
6101
135
io.circe.Decoder.or
Apply
false
0
false
x$1.or[com.github.tizuck.jsonGraphSchema.Edge[T]](x$2)

96
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
edgeDecoder
6082
6102
135
scala.collection.IterableOnceOps.reduceLeft
Apply
false
0
false
l.reduceLeft[io.circe.Decoder[com.github.tizuck.jsonGraphSchema.Edge[T]]](((x$1: io.circe.Decoder[com.github.tizuck.jsonGraphSchema.Edge[T]], x$2: io.circe.Decoder[com.github.tizuck.jsonGraphSchema.Edge[T]]) => x$1.or[com.github.tizuck.jsonGraphSchema.Edge[T]](x$2)))

97
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6273
6277
141
<nosymbol>
Literal
false
0
false
"id"

98
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6281
6281
141
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

99
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6281
6281
141
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)

100
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6329
6337
142
<nosymbol>
Literal
false
0
false
"source"

101
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6341
6341
142
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

102
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6341
6341
142
io.circe.Decoder.decodeList
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeList[String](circe.this.Decoder.decodeString)

103
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6387
6395
143
<nosymbol>
Literal
false
0
false
"target"

104
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6399
6399
143
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

105
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6399
6399
143
io.circe.Decoder.decodeList
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeList[String](circe.this.Decoder.decodeString)

106
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6447
6457
144
<nosymbol>
Literal
false
0
false
"relation"

107
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6461
6461
144
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

108
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6461
6461
144
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)

109
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6511
6521
145
<nosymbol>
Literal
false
0
false
"directed"

110
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6525
6525
145
io.circe.Decoder.decodeBoolean
Select
false
0
false
circe.this.Decoder.decodeBoolean

111
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6525
6525
145
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)

112
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6573
6580
146
<nosymbol>
Literal
false
0
false
"label"

113
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6584
6584
146
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

114
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6584
6584
146
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)

115
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6634
6644
147
<nosymbol>
Literal
false
0
false
"metadata"

116
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6648
6648
147
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[T](tDecoder)

117
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6842
6866
154
scala.Option.getOrElse
Apply
false
0
false
directed.getOrElse[Boolean](true)

118
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6686
6935
149
com.github.tizuck.jsonGraphSchema.DirectedHyperEdge.<init>
Apply
false
0
false
new com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T](x$2, x$3, x$1, x$4, x$5, x$6, x$7)

119
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6610
6935
147
scala.util.Either.map
Apply
false
0
false
c.downField("metadata").as[Option[T]](circe.this.Decoder.decodeOption[T](tDecoder)).map[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((metadata: Option[T]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: List[String] = source;
  <artifact> val x$3: List[String] = target;
  <artifact> val x$4: Option[String] = relation;
  <artifact> val x$5: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$6: Option[String] = label;
  <artifact> val x$7: Option[T] = metadata;
  new com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T](x$2, x$3, x$1, x$4, x$5, x$6, x$7)
}))

120
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6552
6935
146
scala.util.Either.flatMap
Apply
false
0
false
c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((label: Option[String]) => c.downField("metadata").as[Option[T]](circe.this.Decoder.decodeOption[T](tDecoder)).map[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((metadata: Option[T]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: List[String] = source;
  <artifact> val x$3: List[String] = target;
  <artifact> val x$4: Option[String] = relation;
  <artifact> val x$5: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$6: Option[String] = label;
  <artifact> val x$7: Option[T] = metadata;
  new com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T](x$2, x$3, x$1, x$4, x$5, x$6, x$7)
}))))

121
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6487
6935
145
scala.util.Either.flatMap
Apply
false
0
false
c.downField("directed").as[Option[Boolean]](circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((directed: Option[Boolean]) => c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((label: Option[String]) => c.downField("metadata").as[Option[T]](circe.this.Decoder.decodeOption[T](tDecoder)).map[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((metadata: Option[T]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: List[String] = source;
  <artifact> val x$3: List[String] = target;
  <artifact> val x$4: Option[String] = relation;
  <artifact> val x$5: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$6: Option[String] = label;
  <artifact> val x$7: Option[T] = metadata;
  new com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T](x$2, x$3, x$1, x$4, x$5, x$6, x$7)
}))))))

122
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6423
6935
144
scala.util.Either.flatMap
Apply
false
0
false
c.downField("relation").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((relation: Option[String]) => c.downField("directed").as[Option[Boolean]](circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((directed: Option[Boolean]) => c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((label: Option[String]) => c.downField("metadata").as[Option[T]](circe.this.Decoder.decodeOption[T](tDecoder)).map[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((metadata: Option[T]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: List[String] = source;
  <artifact> val x$3: List[String] = target;
  <artifact> val x$4: Option[String] = relation;
  <artifact> val x$5: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$6: Option[String] = label;
  <artifact> val x$7: Option[T] = metadata;
  new com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T](x$2, x$3, x$1, x$4, x$5, x$6, x$7)
}))))))))

123
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6365
6935
143
scala.util.Either.flatMap
Apply
false
0
false
c.downField("target").as[List[String]](circe.this.Decoder.decodeList[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((target: List[String]) => c.downField("relation").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((relation: Option[String]) => c.downField("directed").as[Option[Boolean]](circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((directed: Option[Boolean]) => c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((label: Option[String]) => c.downField("metadata").as[Option[T]](circe.this.Decoder.decodeOption[T](tDecoder)).map[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((metadata: Option[T]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: List[String] = source;
  <artifact> val x$3: List[String] = target;
  <artifact> val x$4: Option[String] = relation;
  <artifact> val x$5: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$6: Option[String] = label;
  <artifact> val x$7: Option[T] = metadata;
  new com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T](x$2, x$3, x$1, x$4, x$5, x$6, x$7)
}))))))))))

124
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6307
6935
142
scala.util.Either.flatMap
Apply
false
0
false
c.downField("source").as[List[String]](circe.this.Decoder.decodeList[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((source: List[String]) => c.downField("target").as[List[String]](circe.this.Decoder.decodeList[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((target: List[String]) => c.downField("relation").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((relation: Option[String]) => c.downField("directed").as[Option[Boolean]](circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((directed: Option[Boolean]) => c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((label: Option[String]) => c.downField("metadata").as[Option[T]](circe.this.Decoder.decodeOption[T](tDecoder)).map[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((metadata: Option[T]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: List[String] = source;
  <artifact> val x$3: List[String] = target;
  <artifact> val x$4: Option[String] = relation;
  <artifact> val x$5: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$6: Option[String] = label;
  <artifact> val x$7: Option[T] = metadata;
  new com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T](x$2, x$3, x$1, x$4, x$5, x$6, x$7)
}))))))))))))

125
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperEdge
6240
6935
141
scala.util.Either.flatMap
Apply
false
0
false
c.downField("id").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((id: Option[String]) => c.downField("source").as[List[String]](circe.this.Decoder.decodeList[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((source: List[String]) => c.downField("target").as[List[String]](circe.this.Decoder.decodeList[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((target: List[String]) => c.downField("relation").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((relation: Option[String]) => c.downField("directed").as[Option[Boolean]](circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((directed: Option[Boolean]) => c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((label: Option[String]) => c.downField("metadata").as[Option[T]](circe.this.Decoder.decodeOption[T](tDecoder)).map[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T]](((metadata: Option[T]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: List[String] = source;
  <artifact> val x$3: List[String] = target;
  <artifact> val x$4: Option[String] = relation;
  <artifact> val x$5: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$6: Option[String] = label;
  <artifact> val x$7: Option[T] = metadata;
  new com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T](x$2, x$3, x$1, x$4, x$5, x$6, x$7)
}))))))))))))))

126
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7126
7130
165
<nosymbol>
Literal
false
0
false
"id"

127
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7134
7134
165
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

128
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7134
7134
165
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)

129
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7184
7194
166
<nosymbol>
Literal
false
0
false
"relation"

130
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7198
7198
166
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

131
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7198
7198
166
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)

132
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7248
7258
167
<nosymbol>
Literal
false
0
false
"directed"

133
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7262
7262
167
io.circe.Decoder.decodeBoolean
Select
false
0
false
circe.this.Decoder.decodeBoolean

134
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7262
7262
167
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)

135
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7310
7317
168
<nosymbol>
Literal
false
0
false
"label"

136
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7321
7321
168
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

137
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7321
7321
168
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)

138
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7371
7381
169
<nosymbol>
Literal
false
0
false
"metadata"

139
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7385
7385
169
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[T](tDecoder)

140
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7427
7434
170
<nosymbol>
Literal
false
0
false
"nodes"

141
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7438
7438
170
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

142
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7438
7438
170
io.circe.Decoder.decodeList
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeList[String](circe.this.Decoder.decodeString)

143
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7581
7605
175
scala.Option.getOrElse
Apply
false
0
false
directed.getOrElse[Boolean](true)

144
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7479
7700
172
com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge.<init>
Apply
false
0
false
new com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T](x$6, x$1, x$2, x$3, x$4, x$5)

145
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7406
7700
170
scala.util.Either.map
Apply
false
0
false
c.downField("nodes").as[List[String]](circe.this.Decoder.decodeList[String](circe.this.Decoder.decodeString)).map[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](((nodes: List[String]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = relation;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$4: Option[String] = label;
  <artifact> val x$5: Option[T] = metadata;
  <artifact> val x$6: List[String] = nodes;
  new com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T](x$6, x$1, x$2, x$3, x$4, x$5)
}))

146
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7347
7700
169
scala.util.Either.flatMap
Apply
false
0
false
c.downField("metadata").as[Option[T]](circe.this.Decoder.decodeOption[T](tDecoder)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](((metadata: Option[T]) => c.downField("nodes").as[List[String]](circe.this.Decoder.decodeList[String](circe.this.Decoder.decodeString)).map[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](((nodes: List[String]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = relation;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$4: Option[String] = label;
  <artifact> val x$5: Option[T] = metadata;
  <artifact> val x$6: List[String] = nodes;
  new com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T](x$6, x$1, x$2, x$3, x$4, x$5)
}))))

147
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7289
7700
168
scala.util.Either.flatMap
Apply
false
0
false
c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](((label: Option[String]) => c.downField("metadata").as[Option[T]](circe.this.Decoder.decodeOption[T](tDecoder)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](((metadata: Option[T]) => c.downField("nodes").as[List[String]](circe.this.Decoder.decodeList[String](circe.this.Decoder.decodeString)).map[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](((nodes: List[String]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = relation;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$4: Option[String] = label;
  <artifact> val x$5: Option[T] = metadata;
  <artifact> val x$6: List[String] = nodes;
  new com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T](x$6, x$1, x$2, x$3, x$4, x$5)
}))))))

148
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7224
7700
167
scala.util.Either.flatMap
Apply
false
0
false
c.downField("directed").as[Option[Boolean]](circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](((directed: Option[Boolean]) => c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](((label: Option[String]) => c.downField("metadata").as[Option[T]](circe.this.Decoder.decodeOption[T](tDecoder)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](((metadata: Option[T]) => c.downField("nodes").as[List[String]](circe.this.Decoder.decodeList[String](circe.this.Decoder.decodeString)).map[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](((nodes: List[String]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = relation;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$4: Option[String] = label;
  <artifact> val x$5: Option[T] = metadata;
  <artifact> val x$6: List[String] = nodes;
  new com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T](x$6, x$1, x$2, x$3, x$4, x$5)
}))))))))

149
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7160
7700
166
scala.util.Either.flatMap
Apply
false
0
false
c.downField("relation").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](((relation: Option[String]) => c.downField("directed").as[Option[Boolean]](circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](((directed: Option[Boolean]) => c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](((label: Option[String]) => c.downField("metadata").as[Option[T]](circe.this.Decoder.decodeOption[T](tDecoder)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](((metadata: Option[T]) => c.downField("nodes").as[List[String]](circe.this.Decoder.decodeList[String](circe.this.Decoder.decodeString)).map[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](((nodes: List[String]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = relation;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$4: Option[String] = label;
  <artifact> val x$5: Option[T] = metadata;
  <artifact> val x$6: List[String] = nodes;
  new com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T](x$6, x$1, x$2, x$3, x$4, x$5)
}))))))))))

150
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperEdge
7093
7700
165
scala.util.Either.flatMap
Apply
false
0
false
c.downField("id").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](((id: Option[String]) => c.downField("relation").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](((relation: Option[String]) => c.downField("directed").as[Option[Boolean]](circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](((directed: Option[Boolean]) => c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](((label: Option[String]) => c.downField("metadata").as[Option[T]](circe.this.Decoder.decodeOption[T](tDecoder)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](((metadata: Option[T]) => c.downField("nodes").as[List[String]](circe.this.Decoder.decodeList[String](circe.this.Decoder.decodeString)).map[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T]](((nodes: List[String]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = relation;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$4: Option[String] = label;
  <artifact> val x$5: Option[T] = metadata;
  <artifact> val x$6: List[String] = nodes;
  new com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T](x$6, x$1, x$2, x$3, x$4, x$5)
}))))))))))))

151
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
7889
7893
187
<nosymbol>
Literal
false
0
false
"id"

152
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
7897
7897
187
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

153
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
7897
7897
187
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)

154
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
7947
7955
188
<nosymbol>
Literal
false
0
false
"source"

155
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
7959
7959
188
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

156
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
8001
8009
189
<nosymbol>
Literal
false
0
false
"target"

157
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
8013
8013
189
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

158
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
8057
8067
190
<nosymbol>
Literal
false
0
false
"relation"

159
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
8071
8071
190
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

160
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
8071
8071
190
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)

161
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
8123
8133
191
<nosymbol>
Literal
false
0
false
"directed"

162
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
8137
8137
191
io.circe.Decoder.decodeBoolean
Select
false
0
false
circe.this.Decoder.decodeBoolean

163
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
8137
8137
191
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)

164
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
8187
8194
192
<nosymbol>
Literal
false
0
false
"label"

165
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
8198
8198
192
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

166
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
8198
8198
192
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)

167
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
8250
8260
193
<nosymbol>
Literal
false
0
false
"metadata"

168
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
8264
8264
193
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[T1](t1Decoder)

169
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
8467
8491
200
scala.Option.getOrElse
Apply
false
0
false
directed.getOrElse[Boolean](true)

170
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
8307
8566
195
com.github.tizuck.jsonGraphSchema.SimpleEdge.<init>
Apply
false
0
false
new com.github.tizuck.jsonGraphSchema.SimpleEdge[T1](x$2, x$3, x$1, x$4, x$5, x$6, x$7)

171
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
8226
8566
193
scala.util.Either.map
Apply
false
0
false
c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1Decoder)).map[com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((metadata: Option[T1]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: String = source;
  <artifact> val x$3: String = target;
  <artifact> val x$4: Option[String] = relation;
  <artifact> val x$5: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$6: Option[String] = label;
  <artifact> val x$7: Option[T1] = metadata;
  new com.github.tizuck.jsonGraphSchema.SimpleEdge[T1](x$2, x$3, x$1, x$4, x$5, x$6, x$7)
}))

172
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
8166
8566
192
scala.util.Either.flatMap
Apply
false
0
false
c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((label: Option[String]) => c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1Decoder)).map[com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((metadata: Option[T1]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: String = source;
  <artifact> val x$3: String = target;
  <artifact> val x$4: Option[String] = relation;
  <artifact> val x$5: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$6: Option[String] = label;
  <artifact> val x$7: Option[T1] = metadata;
  new com.github.tizuck.jsonGraphSchema.SimpleEdge[T1](x$2, x$3, x$1, x$4, x$5, x$6, x$7)
}))))

173
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
8099
8566
191
scala.util.Either.flatMap
Apply
false
0
false
c.downField("directed").as[Option[Boolean]](circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((directed: Option[Boolean]) => c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((label: Option[String]) => c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1Decoder)).map[com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((metadata: Option[T1]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: String = source;
  <artifact> val x$3: String = target;
  <artifact> val x$4: Option[String] = relation;
  <artifact> val x$5: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$6: Option[String] = label;
  <artifact> val x$7: Option[T1] = metadata;
  new com.github.tizuck.jsonGraphSchema.SimpleEdge[T1](x$2, x$3, x$1, x$4, x$5, x$6, x$7)
}))))))

174
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
8033
8566
190
scala.util.Either.flatMap
Apply
false
0
false
c.downField("relation").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((relation: Option[String]) => c.downField("directed").as[Option[Boolean]](circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((directed: Option[Boolean]) => c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((label: Option[String]) => c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1Decoder)).map[com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((metadata: Option[T1]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: String = source;
  <artifact> val x$3: String = target;
  <artifact> val x$4: Option[String] = relation;
  <artifact> val x$5: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$6: Option[String] = label;
  <artifact> val x$7: Option[T1] = metadata;
  new com.github.tizuck.jsonGraphSchema.SimpleEdge[T1](x$2, x$3, x$1, x$4, x$5, x$6, x$7)
}))))))))

175
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
7979
8566
189
scala.util.Either.flatMap
Apply
false
0
false
c.downField("target").as[String](circe.this.Decoder.decodeString).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((target: String) => c.downField("relation").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((relation: Option[String]) => c.downField("directed").as[Option[Boolean]](circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((directed: Option[Boolean]) => c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((label: Option[String]) => c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1Decoder)).map[com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((metadata: Option[T1]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: String = source;
  <artifact> val x$3: String = target;
  <artifact> val x$4: Option[String] = relation;
  <artifact> val x$5: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$6: Option[String] = label;
  <artifact> val x$7: Option[T1] = metadata;
  new com.github.tizuck.jsonGraphSchema.SimpleEdge[T1](x$2, x$3, x$1, x$4, x$5, x$6, x$7)
}))))))))))

176
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
7925
8566
188
scala.util.Either.flatMap
Apply
false
0
false
c.downField("source").as[String](circe.this.Decoder.decodeString).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((source: String) => c.downField("target").as[String](circe.this.Decoder.decodeString).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((target: String) => c.downField("relation").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((relation: Option[String]) => c.downField("directed").as[Option[Boolean]](circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((directed: Option[Boolean]) => c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((label: Option[String]) => c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1Decoder)).map[com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((metadata: Option[T1]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: String = source;
  <artifact> val x$3: String = target;
  <artifact> val x$4: Option[String] = relation;
  <artifact> val x$5: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$6: Option[String] = label;
  <artifact> val x$7: Option[T1] = metadata;
  new com.github.tizuck.jsonGraphSchema.SimpleEdge[T1](x$2, x$3, x$1, x$4, x$5, x$6, x$7)
}))))))))))))

177
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleEdgeDecoder
7854
8566
187
scala.util.Either.flatMap
Apply
false
0
false
c.downField("id").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((id: Option[String]) => c.downField("source").as[String](circe.this.Decoder.decodeString).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((source: String) => c.downField("target").as[String](circe.this.Decoder.decodeString).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((target: String) => c.downField("relation").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((relation: Option[String]) => c.downField("directed").as[Option[Boolean]](circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((directed: Option[Boolean]) => c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((label: Option[String]) => c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1Decoder)).map[com.github.tizuck.jsonGraphSchema.SimpleEdge[T1]](((metadata: Option[T1]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: String = source;
  <artifact> val x$3: String = target;
  <artifact> val x$4: Option[String] = relation;
  <artifact> val x$5: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$6: Option[String] = label;
  <artifact> val x$7: Option[T1] = metadata;
  new com.github.tizuck.jsonGraphSchema.SimpleEdge[T1](x$2, x$3, x$1, x$4, x$5, x$6, x$7)
}))))))))))))))

178
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodeDecoder
8743
8750
211
<nosymbol>
Literal
false
0
false
"label"

179
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodeDecoder
8754
8754
211
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

180
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodeDecoder
8754
8754
211
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)

181
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodeDecoder
8804
8814
212
<nosymbol>
Literal
false
0
false
"metadata"

182
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodeDecoder
8818
8818
212
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[T1](t1Decoder)

183
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodeDecoder
8857
9087
214
com.github.tizuck.jsonGraphSchema.Node.<init>
Apply
false
0
false
new com.github.tizuck.jsonGraphSchema.Node[T1](label, metadata, "")

184
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodeDecoder
8780
9087
212
scala.util.Either.map
Apply
false
0
false
c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1Decoder)).map[com.github.tizuck.jsonGraphSchema.Node[T1]](((metadata: Option[T1]) => new com.github.tizuck.jsonGraphSchema.Node[T1](label, metadata, "")))

185
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodeDecoder
8707
9087
211
scala.util.Either.flatMap
Apply
false
0
false
c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.Node[T1]](((label: Option[String]) => c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1Decoder)).map[com.github.tizuck.jsonGraphSchema.Node[T1]](((metadata: Option[T1]) => new com.github.tizuck.jsonGraphSchema.Node[T1](label, metadata, "")))))

186
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodesDecoder
9257
9260
227
scala.Nil
Select
false
0
false
scala.`package`.Nil

187
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodesDecoder
9240
9261
227
scala.Option.getOrElse
Apply
false
0
false
c.keys.getOrElse[Iterable[String]](scala.`package`.Nil)

188
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodesDecoder
9362
9362
231
com.github.tizuck.jsonGraphSchema.nodeDecoder
ApplyToImplicitArgs
false
0
false
jsonGraphSchema.this.nodeDecoder[T1](t1Decoder)

189
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodesDecoder
9408
9408
233
com.github.tizuck.jsonGraphSchema.Node.copy$default$1
TypeApply
false
0
false
node.copy$default$1[Nothing]

190
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodesDecoder
9408
9408
233
com.github.tizuck.jsonGraphSchema.Node.copy$default$2
TypeApply
false
0
false
node.copy$default$2[Nothing]

191
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodesDecoder
9403
9427
233
com.github.tizuck.jsonGraphSchema.Node.copy
Apply
false
0
false
node.copy[T1](x$2, x$3, x$1)

192
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodesDecoder
9318
9427
231
scala.util.Either.map
Apply
false
0
false
c.downField(key).as[com.github.tizuck.jsonGraphSchema.Node[T1]](jsonGraphSchema.this.nodeDecoder[T1](t1Decoder)).map[com.github.tizuck.jsonGraphSchema.Node[T1]](((node: com.github.tizuck.jsonGraphSchema.Node[T1]) => {
  <artifact> val x$1: String = key;
  <artifact> val x$2: Option[String] = node.copy$default$1[Nothing];
  <artifact> val x$3: Option[T1] = node.copy$default$2[Nothing];
  node.copy[T1](x$2, x$3, x$1)
}))

193
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodesDecoder
9283
9427
229
scala.collection.IterableOps.map
Apply
false
0
false
keys.map[scala.util.Either[io.circe.DecodingFailure,com.github.tizuck.jsonGraphSchema.Node[T1]]](((key: String) => c.downField(key).as[com.github.tizuck.jsonGraphSchema.Node[T1]](jsonGraphSchema.this.nodeDecoder[T1](t1Decoder)).map[com.github.tizuck.jsonGraphSchema.Node[T1]](((node: com.github.tizuck.jsonGraphSchema.Node[T1]) => {
  <artifact> val x$1: String = key;
  <artifact> val x$2: Option[String] = node.copy$default$1[Nothing];
  <artifact> val x$3: Option[T1] = node.copy$default$2[Nothing];
  node.copy[T1](x$2, x$3, x$1)
}))))

194
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodesDecoder
9512
9532
237
scala.collection.immutable.List.empty
TypeApply
false
0
false
scala.`package`.List.empty[com.github.tizuck.jsonGraphSchema.Node[T1]]

195
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodesDecoder
9506
9533
237
com.github.tizuck.jsonGraphSchema.Nodes.apply
Apply
false
0
false
jsonGraphSchema.this.Nodes.apply[T1](scala.`package`.List.empty[com.github.tizuck.jsonGraphSchema.Node[T1]])

196
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodesDecoder
9472
9543
237
scala.util.Right.withLeft
TypeApply
false
0
false
scala.`package`.Right.apply[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.Nodes[T1]](jsonGraphSchema.this.Nodes.apply[T1](scala.`package`.List.empty[com.github.tizuck.jsonGraphSchema.Node[T1]])).withLeft[io.circe.DecodingFailure]

197
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodesDecoder
9748
9762
243
io.circe.DecodingFailure.reason
Select
false
0
false
l.value.reason

198
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodesDecoder
9764
9773
243
io.circe.ACursor.history
Select
false
0
false
c.history

199
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodesDecoder
9732
9774
243
io.circe.DecodingFailure.apply
Apply
false
0
false
io.circe.DecodingFailure.apply(l.value.reason, c.history)

200
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodesDecoder
9727
9775
243
scala.util.Left.apply
Apply
false
0
false
scala.`package`.Left.apply[io.circe.DecodingFailure, Nothing](io.circe.DecodingFailure.apply(l.value.reason, c.history))

201
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodesDecoder
9846
9857
244
scala.collection.IterableFactory.apply
Apply
false
0
false
scala.`package`.List.apply[com.github.tizuck.jsonGraphSchema.Node[T1]](value)

202
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodesDecoder
9835
9857
244
scala.collection.IterableOps.++
Apply
false
0
false
v.nodes.++[com.github.tizuck.jsonGraphSchema.Node[T1]](scala.`package`.List.apply[com.github.tizuck.jsonGraphSchema.Node[T1]](value))

203
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodesDecoder
9820
9858
244
com.github.tizuck.jsonGraphSchema.Nodes.copy
Apply
false
0
false
v.copy[T1](v.nodes.++[com.github.tizuck.jsonGraphSchema.Node[T1]](scala.`package`.List.apply[com.github.tizuck.jsonGraphSchema.Node[T1]](value)))

204
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodesDecoder
9814
9859
244
scala.util.Right.apply
Apply
false
0
false
scala.`package`.Right.apply[Nothing, com.github.tizuck.jsonGraphSchema.Nodes[T1]](v.copy[T1](v.nodes.++[com.github.tizuck.jsonGraphSchema.Node[T1]](scala.`package`.List.apply[com.github.tizuck.jsonGraphSchema.Node[T1]](value))))

205
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
nodesDecoder
9457
9898
237
scala.collection.IterableOnceOps.foldLeft
Apply
false
0
false
nodes.foldLeft[scala.util.Either[io.circe.DecodingFailure,com.github.tizuck.jsonGraphSchema.Nodes[T1]]](scala.`package`.Right.apply[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.Nodes[T1]](jsonGraphSchema.this.Nodes.apply[T1](scala.`package`.List.empty[com.github.tizuck.jsonGraphSchema.Node[T1]])).withLeft[io.circe.DecodingFailure])(((x0$1: scala.util.Either[io.circe.DecodingFailure,com.github.tizuck.jsonGraphSchema.Nodes[T1]], x1$1: scala.util.Either[io.circe.DecodingFailure,com.github.tizuck.jsonGraphSchema.Node[T1]]) => scala.Tuple2.apply[scala.util.Either[io.circe.DecodingFailure,com.github.tizuck.jsonGraphSchema.Nodes[T1]], scala.util.Either[io.circe.DecodingFailure,com.github.tizuck.jsonGraphSchema.Node[T1]]](x0$1, x1$1) match {
  case (_1: scala.util.Either[io.circe.DecodingFailure,com.github.tizuck.jsonGraphSchema.Nodes[T1]], _2: scala.util.Either[io.circe.DecodingFailure,com.github.tizuck.jsonGraphSchema.Node[T1]]): (scala.util.Either[io.circe.DecodingFailure,com.github.tizuck.jsonGraphSchema.Nodes[T1]], scala.util.Either[io.circe.DecodingFailure,com.github.tizuck.jsonGraphSchema.Node[T1]])((acc @ _), (value @ _)) => acc match {
    case (l @ (value: io.circe.DecodingFailure): scala.util.Left[io.circe.DecodingFailure,com.github.tizuck.jsonGraphSchema.Nodes[T1]](_)) => l
    case (value: com.github.tizuck.jsonGraphSchema.Nodes[T1]): scala.util.Right[io.circe.DecodingFailure,com.github.tizuck.jsonGraphSchema.Nodes[T1]]((v @ _)) => value match {
      case (l @ (value: io.circe.DecodingFailure): scala.util.Left[io.circe.DecodingFailure,com.github.tizuck.jsonGraphSchema.Node[T1]](_)) => scala.`package`.Left.apply[io.circe.DecodingFailure, Nothing](io.circe.DecodingFailure.apply(l.value.reason, c.history))
      case (value: com.github.tizuck.jsonGraphSchema.Node[T1]): scala.util.Right[io.circe.DecodingFailure,com.github.tizuck.jsonGraphSchema.Node[T1]]((value @ _)) => scala.`package`.Right.apply[Nothing, com.github.tizuck.jsonGraphSchema.Nodes[T1]](v.copy[T1](v.nodes.++[com.github.tizuck.jsonGraphSchema.Node[T1]](scala.`package`.List.apply[com.github.tizuck.jsonGraphSchema.Node[T1]](value))))
    }
  }
}))

206
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
graphDecoder
10267
10267
255
com.github.tizuck.jsonGraphSchema.simpleGraphDecoder
ApplyToImplicitArgs
false
0
false
jsonGraphSchema.this.simpleGraphDecoder[T1, T2, T3](t1decoder, t2decoder, t3decoder)

207
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
graphDecoder
10260
10290
255
io.circe.Decoder.apply
ApplyToImplicitArgs
false
0
false
io.circe.Decoder.apply[com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](jsonGraphSchema.this.simpleGraphDecoder[T1, T2, T3](t1decoder, t2decoder, t3decoder))

208
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
graphDecoder
10267
10267
255
io.circe.Decoder.decoderInstances
Select
false
0
false
circe.this.Decoder.decoderInstances

209
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
graphDecoder
10260
10296
255
cats.Functor.Ops.widen
TypeApply
false
0
false
cats.syntax.`package`.functor.toFunctorOps[io.circe.Decoder, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](io.circe.Decoder.apply[com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](jsonGraphSchema.this.simpleGraphDecoder[T1, T2, T3](t1decoder, t2decoder, t3decoder)))(circe.this.Decoder.decoderInstances).widen[com.github.tizuck.jsonGraphSchema.Graph[T1,T2,T3]]

210
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
graphDecoder
10312
10312
256
com.github.tizuck.jsonGraphSchema.directedHyperGraphEncoder
ApplyToImplicitArgs
false
0
false
jsonGraphSchema.this.directedHyperGraphEncoder[T1, T2, T3](t1decoder, t2decoder, t3decoder)

211
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
graphDecoder
10305
10342
256
io.circe.Decoder.apply
ApplyToImplicitArgs
false
0
false
io.circe.Decoder.apply[com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](jsonGraphSchema.this.directedHyperGraphEncoder[T1, T2, T3](t1decoder, t2decoder, t3decoder))

212
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
graphDecoder
10312
10312
256
io.circe.Decoder.decoderInstances
Select
false
0
false
circe.this.Decoder.decoderInstances

213
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
graphDecoder
10305
10348
256
cats.Functor.Ops.widen
TypeApply
false
0
false
cats.syntax.`package`.functor.toFunctorOps[io.circe.Decoder, com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](io.circe.Decoder.apply[com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](jsonGraphSchema.this.directedHyperGraphEncoder[T1, T2, T3](t1decoder, t2decoder, t3decoder)))(circe.this.Decoder.decoderInstances).widen[com.github.tizuck.jsonGraphSchema.Graph[T1,T2,T3]]

214
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
graphDecoder
10364
10364
257
com.github.tizuck.jsonGraphSchema.undirectedHyperGraphDecoder
ApplyToImplicitArgs
false
0
false
jsonGraphSchema.this.undirectedHyperGraphDecoder[T1, T2, T3](t1decoder, t2decoder, t3decoder)

215
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
graphDecoder
10357
10396
257
io.circe.Decoder.apply
ApplyToImplicitArgs
false
0
false
io.circe.Decoder.apply[com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](jsonGraphSchema.this.undirectedHyperGraphDecoder[T1, T2, T3](t1decoder, t2decoder, t3decoder))

216
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
graphDecoder
10364
10364
257
io.circe.Decoder.decoderInstances
Select
false
0
false
circe.this.Decoder.decoderInstances

217
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
graphDecoder
10357
10402
257
cats.Functor.Ops.widen
TypeApply
false
0
false
cats.syntax.`package`.functor.toFunctorOps[io.circe.Decoder, com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](io.circe.Decoder.apply[com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](jsonGraphSchema.this.undirectedHyperGraphDecoder[T1, T2, T3](t1decoder, t2decoder, t3decoder)))(circe.this.Decoder.decoderInstances).widen[com.github.tizuck.jsonGraphSchema.Graph[T1,T2,T3]]

218
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
graphDecoder
10221
10410
254
scala.collection.IterableFactory.apply
Apply
false
0
false
scala.`package`.List.apply[io.circe.Decoder[com.github.tizuck.jsonGraphSchema.Graph[T1,T2,T3]]](cats.syntax.`package`.functor.toFunctorOps[io.circe.Decoder, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](io.circe.Decoder.apply[com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](jsonGraphSchema.this.simpleGraphDecoder[T1, T2, T3](t1decoder, t2decoder, t3decoder)))(circe.this.Decoder.decoderInstances).widen[com.github.tizuck.jsonGraphSchema.Graph[T1,T2,T3]], cats.syntax.`package`.functor.toFunctorOps[io.circe.Decoder, com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](io.circe.Decoder.apply[com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](jsonGraphSchema.this.directedHyperGraphEncoder[T1, T2, T3](t1decoder, t2decoder, t3decoder)))(circe.this.Decoder.decoderInstances).widen[com.github.tizuck.jsonGraphSchema.Graph[T1,T2,T3]], cats.syntax.`package`.functor.toFunctorOps[io.circe.Decoder, com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](io.circe.Decoder.apply[com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](jsonGraphSchema.this.undirectedHyperGraphDecoder[T1, T2, T3](t1decoder, t2decoder, t3decoder)))(circe.this.Decoder.decoderInstances).widen[com.github.tizuck.jsonGraphSchema.Graph[T1,T2,T3]])

219
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
graphDecoder
10429
10435
259
io.circe.Decoder.or
Apply
false
0
false
x$3.or[com.github.tizuck.jsonGraphSchema.Graph[T1,T2,T3]](x$4)

220
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
graphDecoder
10416
10436
259
scala.collection.IterableOnceOps.reduceLeft
Apply
false
0
false
l.reduceLeft[io.circe.Decoder[com.github.tizuck.jsonGraphSchema.Graph[T1,T2,T3]]](((x$3: io.circe.Decoder[com.github.tizuck.jsonGraphSchema.Graph[T1,T2,T3]], x$4: io.circe.Decoder[com.github.tizuck.jsonGraphSchema.Graph[T1,T2,T3]]) => x$3.or[com.github.tizuck.jsonGraphSchema.Graph[T1,T2,T3]](x$4)))

221
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
10800
10804
269
<nosymbol>
Literal
false
0
false
"id"

222
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
10808
10808
269
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

223
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
10808
10808
269
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)

224
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
10855
10862
270
<nosymbol>
Literal
false
0
false
"label"

225
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
10866
10866
270
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

226
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
10866
10866
270
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)

227
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
10916
10926
271
<nosymbol>
Literal
false
0
false
"directed"

228
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
10930
10930
271
io.circe.Decoder.decodeBoolean
Select
false
0
false
circe.this.Decoder.decodeBoolean

229
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
10930
10930
271
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)

230
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
10976
10982
272
<nosymbol>
Literal
false
0
false
"type"

231
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
10986
10986
272
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

232
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
10986
10986
272
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)

233
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
11036
11046
273
<nosymbol>
Literal
false
0
false
"metadata"

234
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
11050
11050
273
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[T1](t1decoder)

235
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
11093
11100
274
<nosymbol>
Literal
false
0
false
"nodes"

236
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
11104
11104
274
com.github.tizuck.jsonGraphSchema.nodesDecoder
ApplyToImplicitArgs
false
0
false
jsonGraphSchema.this.nodesDecoder[T2](t2decoder)

237
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
11104
11104
274
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.nodesDecoder[T2](t2decoder))

238
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
11154
11166
275
<nosymbol>
Literal
false
0
false
"hyperedges"

239
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
11170
11170
275
com.github.tizuck.jsonGraphSchema.undirectedHyperEdge
ApplyToImplicitArgs
false
0
false
jsonGraphSchema.this.undirectedHyperEdge[T3](t3decoder)

240
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
11170
11170
275
io.circe.Decoder.decodeList
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]](jsonGraphSchema.this.undirectedHyperEdge[T3](t3decoder))

241
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
11170
11170
275
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]](jsonGraphSchema.this.undirectedHyperEdge[T3](t3decoder)))

242
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
11340
11365
280
scala.Option.getOrElse
Apply
false
0
false
directed.getOrElse[Boolean](false)

243
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
11462
11465
283
scala.Nil
Select
false
0
false
scala.`package`.Nil

244
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
11456
11466
283
com.github.tizuck.jsonGraphSchema.Nodes.apply
Apply
false
0
false
jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil)

245
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
11440
11467
283
scala.Option.getOrElse
Apply
false
0
false
nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil))

246
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
11504
11507
284
scala.Nil
Select
false
0
false
scala.`package`.Nil

247
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
11488
11508
284
scala.Option.getOrElse
Apply
false
0
false
edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]](scala.`package`.Nil)

248
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
11236
11519
277
com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph.<init>
Apply
false
0
false
new com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)

249
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
11133
11519
275
scala.util.Either.map
Apply
false
0
false
c.downField("hyperedges").as[Option[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]]](circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]](jsonGraphSchema.this.undirectedHyperEdge[T3](t3decoder)))).map[com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((edges: Option[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = label;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](false);
  <artifact> val x$4: Option[String] = tpe;
  <artifact> val x$5: Option[T1] = metadata;
  <artifact> val x$6: com.github.tizuck.jsonGraphSchema.Nodes[T2] = nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil));
  <artifact> val x$7: List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]] = edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]](scala.`package`.Nil);
  new com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)
}))

250
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
11072
11519
274
scala.util.Either.flatMap
Apply
false
0
false
c.downField("nodes").as[Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]](circe.this.Decoder.decodeOption[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.nodesDecoder[T2](t2decoder))).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((nodes: Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]) => c.downField("hyperedges").as[Option[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]]](circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]](jsonGraphSchema.this.undirectedHyperEdge[T3](t3decoder)))).map[com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((edges: Option[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = label;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](false);
  <artifact> val x$4: Option[String] = tpe;
  <artifact> val x$5: Option[T1] = metadata;
  <artifact> val x$6: com.github.tizuck.jsonGraphSchema.Nodes[T2] = nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil));
  <artifact> val x$7: List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]] = edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]](scala.`package`.Nil);
  new com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)
}))))

251
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
11012
11519
273
scala.util.Either.flatMap
Apply
false
0
false
c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1decoder)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((metadata: Option[T1]) => c.downField("nodes").as[Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]](circe.this.Decoder.decodeOption[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.nodesDecoder[T2](t2decoder))).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((nodes: Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]) => c.downField("hyperedges").as[Option[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]]](circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]](jsonGraphSchema.this.undirectedHyperEdge[T3](t3decoder)))).map[com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((edges: Option[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = label;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](false);
  <artifact> val x$4: Option[String] = tpe;
  <artifact> val x$5: Option[T1] = metadata;
  <artifact> val x$6: com.github.tizuck.jsonGraphSchema.Nodes[T2] = nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil));
  <artifact> val x$7: List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]] = edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]](scala.`package`.Nil);
  new com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)
}))))))

252
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
10957
11519
272
scala.util.Either.flatMap
Apply
false
0
false
c.downField("type").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((tpe: Option[String]) => c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1decoder)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((metadata: Option[T1]) => c.downField("nodes").as[Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]](circe.this.Decoder.decodeOption[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.nodesDecoder[T2](t2decoder))).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((nodes: Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]) => c.downField("hyperedges").as[Option[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]]](circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]](jsonGraphSchema.this.undirectedHyperEdge[T3](t3decoder)))).map[com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((edges: Option[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = label;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](false);
  <artifact> val x$4: Option[String] = tpe;
  <artifact> val x$5: Option[T1] = metadata;
  <artifact> val x$6: com.github.tizuck.jsonGraphSchema.Nodes[T2] = nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil));
  <artifact> val x$7: List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]] = edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]](scala.`package`.Nil);
  new com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)
}))))))))

253
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
10892
11519
271
scala.util.Either.flatMap
Apply
false
0
false
c.downField("directed").as[Option[Boolean]](circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((directed: Option[Boolean]) => c.downField("type").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((tpe: Option[String]) => c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1decoder)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((metadata: Option[T1]) => c.downField("nodes").as[Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]](circe.this.Decoder.decodeOption[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.nodesDecoder[T2](t2decoder))).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((nodes: Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]) => c.downField("hyperedges").as[Option[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]]](circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]](jsonGraphSchema.this.undirectedHyperEdge[T3](t3decoder)))).map[com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((edges: Option[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = label;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](false);
  <artifact> val x$4: Option[String] = tpe;
  <artifact> val x$5: Option[T1] = metadata;
  <artifact> val x$6: com.github.tizuck.jsonGraphSchema.Nodes[T2] = nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil));
  <artifact> val x$7: List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]] = edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]](scala.`package`.Nil);
  new com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)
}))))))))))

254
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
10834
11519
270
scala.util.Either.flatMap
Apply
false
0
false
c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((label: Option[String]) => c.downField("directed").as[Option[Boolean]](circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((directed: Option[Boolean]) => c.downField("type").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((tpe: Option[String]) => c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1decoder)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((metadata: Option[T1]) => c.downField("nodes").as[Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]](circe.this.Decoder.decodeOption[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.nodesDecoder[T2](t2decoder))).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((nodes: Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]) => c.downField("hyperedges").as[Option[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]]](circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]](jsonGraphSchema.this.undirectedHyperEdge[T3](t3decoder)))).map[com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((edges: Option[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = label;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](false);
  <artifact> val x$4: Option[String] = tpe;
  <artifact> val x$5: Option[T1] = metadata;
  <artifact> val x$6: com.github.tizuck.jsonGraphSchema.Nodes[T2] = nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil));
  <artifact> val x$7: List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]] = edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]](scala.`package`.Nil);
  new com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)
}))))))))))))

255
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
undirectedHyperGraphDecoder
10767
11519
269
scala.util.Either.flatMap
Apply
false
0
false
c.downField("id").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((id: Option[String]) => c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((label: Option[String]) => c.downField("directed").as[Option[Boolean]](circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((directed: Option[Boolean]) => c.downField("type").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((tpe: Option[String]) => c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1decoder)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((metadata: Option[T1]) => c.downField("nodes").as[Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]](circe.this.Decoder.decodeOption[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.nodesDecoder[T2](t2decoder))).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((nodes: Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]) => c.downField("hyperedges").as[Option[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]]](circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]](jsonGraphSchema.this.undirectedHyperEdge[T3](t3decoder)))).map[com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3]](((edges: Option[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = label;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](false);
  <artifact> val x$4: Option[String] = tpe;
  <artifact> val x$5: Option[T1] = metadata;
  <artifact> val x$6: com.github.tizuck.jsonGraphSchema.Nodes[T2] = nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil));
  <artifact> val x$7: List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]] = edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.UndirectedHyperEdge[T3]]](scala.`package`.Nil);
  new com.github.tizuck.jsonGraphSchema.UndirectedHyperGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)
}))))))))))))))

256
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
11883
11887
294
<nosymbol>
Literal
false
0
false
"id"

257
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
11891
11891
294
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

258
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
11891
11891
294
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)

259
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
11938
11945
295
<nosymbol>
Literal
false
0
false
"label"

260
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
11949
11949
295
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

261
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
11949
11949
295
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)

262
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
11999
12009
296
<nosymbol>
Literal
false
0
false
"directed"

263
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12013
12013
296
io.circe.Decoder.decodeBoolean
Select
false
0
false
circe.this.Decoder.decodeBoolean

264
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12013
12013
296
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)

265
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12059
12065
297
<nosymbol>
Literal
false
0
false
"type"

266
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12069
12069
297
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

267
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12069
12069
297
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)

268
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12119
12129
298
<nosymbol>
Literal
false
0
false
"metadata"

269
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12133
12133
298
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[T1](t1decoder)

270
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12176
12183
299
<nosymbol>
Literal
false
0
false
"nodes"

271
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12187
12187
299
com.github.tizuck.jsonGraphSchema.nodesDecoder
ApplyToImplicitArgs
false
0
false
jsonGraphSchema.this.nodesDecoder[T2](t2decoder)

272
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12187
12187
299
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.nodesDecoder[T2](t2decoder))

273
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12237
12249
300
<nosymbol>
Literal
false
0
false
"hyperedges"

274
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12253
12253
300
com.github.tizuck.jsonGraphSchema.directedHyperEdge
ApplyToImplicitArgs
false
0
false
jsonGraphSchema.this.directedHyperEdge[T3](t3decoder)

275
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12253
12253
300
io.circe.Decoder.decodeList
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]](jsonGraphSchema.this.directedHyperEdge[T3](t3decoder))

276
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12253
12253
300
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]](jsonGraphSchema.this.directedHyperEdge[T3](t3decoder)))

277
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12419
12443
305
scala.Option.getOrElse
Apply
false
0
false
directed.getOrElse[Boolean](true)

278
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12540
12543
308
scala.Nil
Select
false
0
false
scala.`package`.Nil

279
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12534
12544
308
com.github.tizuck.jsonGraphSchema.Nodes.apply
Apply
false
0
false
jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil)

280
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12518
12545
308
scala.Option.getOrElse
Apply
false
0
false
nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil))

281
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12582
12585
309
scala.Nil
Select
false
0
false
scala.`package`.Nil

282
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12566
12586
309
scala.Option.getOrElse
Apply
false
0
false
edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]](scala.`package`.Nil)

283
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12317
12597
302
com.github.tizuck.jsonGraphSchema.DirectedHyperGraph.<init>
Apply
false
0
false
new com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)

284
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12216
12597
300
scala.util.Either.map
Apply
false
0
false
c.downField("hyperedges").as[Option[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]]](circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]](jsonGraphSchema.this.directedHyperEdge[T3](t3decoder)))).map[com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((edges: Option[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = label;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$4: Option[String] = tpe;
  <artifact> val x$5: Option[T1] = metadata;
  <artifact> val x$6: com.github.tizuck.jsonGraphSchema.Nodes[T2] = nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil));
  <artifact> val x$7: List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]] = edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]](scala.`package`.Nil);
  new com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)
}))

285
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12155
12597
299
scala.util.Either.flatMap
Apply
false
0
false
c.downField("nodes").as[Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]](circe.this.Decoder.decodeOption[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.nodesDecoder[T2](t2decoder))).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((nodes: Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]) => c.downField("hyperedges").as[Option[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]]](circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]](jsonGraphSchema.this.directedHyperEdge[T3](t3decoder)))).map[com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((edges: Option[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = label;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$4: Option[String] = tpe;
  <artifact> val x$5: Option[T1] = metadata;
  <artifact> val x$6: com.github.tizuck.jsonGraphSchema.Nodes[T2] = nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil));
  <artifact> val x$7: List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]] = edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]](scala.`package`.Nil);
  new com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)
}))))

286
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12095
12597
298
scala.util.Either.flatMap
Apply
false
0
false
c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1decoder)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((metadata: Option[T1]) => c.downField("nodes").as[Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]](circe.this.Decoder.decodeOption[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.nodesDecoder[T2](t2decoder))).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((nodes: Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]) => c.downField("hyperedges").as[Option[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]]](circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]](jsonGraphSchema.this.directedHyperEdge[T3](t3decoder)))).map[com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((edges: Option[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = label;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$4: Option[String] = tpe;
  <artifact> val x$5: Option[T1] = metadata;
  <artifact> val x$6: com.github.tizuck.jsonGraphSchema.Nodes[T2] = nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil));
  <artifact> val x$7: List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]] = edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]](scala.`package`.Nil);
  new com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)
}))))))

287
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
12040
12597
297
scala.util.Either.flatMap
Apply
false
0
false
c.downField("type").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((tpe: Option[String]) => c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1decoder)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((metadata: Option[T1]) => c.downField("nodes").as[Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]](circe.this.Decoder.decodeOption[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.nodesDecoder[T2](t2decoder))).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((nodes: Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]) => c.downField("hyperedges").as[Option[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]]](circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]](jsonGraphSchema.this.directedHyperEdge[T3](t3decoder)))).map[com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((edges: Option[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = label;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$4: Option[String] = tpe;
  <artifact> val x$5: Option[T1] = metadata;
  <artifact> val x$6: com.github.tizuck.jsonGraphSchema.Nodes[T2] = nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil));
  <artifact> val x$7: List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]] = edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]](scala.`package`.Nil);
  new com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)
}))))))))

288
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
11975
12597
296
scala.util.Either.flatMap
Apply
false
0
false
c.downField("directed").as[Option[Boolean]](circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((directed: Option[Boolean]) => c.downField("type").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((tpe: Option[String]) => c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1decoder)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((metadata: Option[T1]) => c.downField("nodes").as[Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]](circe.this.Decoder.decodeOption[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.nodesDecoder[T2](t2decoder))).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((nodes: Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]) => c.downField("hyperedges").as[Option[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]]](circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]](jsonGraphSchema.this.directedHyperEdge[T3](t3decoder)))).map[com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((edges: Option[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = label;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$4: Option[String] = tpe;
  <artifact> val x$5: Option[T1] = metadata;
  <artifact> val x$6: com.github.tizuck.jsonGraphSchema.Nodes[T2] = nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil));
  <artifact> val x$7: List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]] = edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]](scala.`package`.Nil);
  new com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)
}))))))))))

289
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
11917
12597
295
scala.util.Either.flatMap
Apply
false
0
false
c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((label: Option[String]) => c.downField("directed").as[Option[Boolean]](circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((directed: Option[Boolean]) => c.downField("type").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((tpe: Option[String]) => c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1decoder)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((metadata: Option[T1]) => c.downField("nodes").as[Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]](circe.this.Decoder.decodeOption[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.nodesDecoder[T2](t2decoder))).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((nodes: Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]) => c.downField("hyperedges").as[Option[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]]](circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]](jsonGraphSchema.this.directedHyperEdge[T3](t3decoder)))).map[com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((edges: Option[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = label;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$4: Option[String] = tpe;
  <artifact> val x$5: Option[T1] = metadata;
  <artifact> val x$6: com.github.tizuck.jsonGraphSchema.Nodes[T2] = nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil));
  <artifact> val x$7: List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]] = edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]](scala.`package`.Nil);
  new com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)
}))))))))))))

290
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
directedHyperGraphEncoder
11850
12597
294
scala.util.Either.flatMap
Apply
false
0
false
c.downField("id").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((id: Option[String]) => c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((label: Option[String]) => c.downField("directed").as[Option[Boolean]](circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((directed: Option[Boolean]) => c.downField("type").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((tpe: Option[String]) => c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1decoder)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((metadata: Option[T1]) => c.downField("nodes").as[Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]](circe.this.Decoder.decodeOption[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.nodesDecoder[T2](t2decoder))).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((nodes: Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]) => c.downField("hyperedges").as[Option[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]]](circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]](jsonGraphSchema.this.directedHyperEdge[T3](t3decoder)))).map[com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3]](((edges: Option[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = label;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$4: Option[String] = tpe;
  <artifact> val x$5: Option[T1] = metadata;
  <artifact> val x$6: com.github.tizuck.jsonGraphSchema.Nodes[T2] = nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil));
  <artifact> val x$7: List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]] = edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.DirectedHyperEdge[T3]]](scala.`package`.Nil);
  new com.github.tizuck.jsonGraphSchema.DirectedHyperGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)
}))))))))))))))

291
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
12974
12996
321
java.lang.String.equals
Apply
false
0
false
s.equals("hyperedges")

292
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
12958
12997
321
scala.collection.IterableOnceOps.exists
Apply
false
0
false
key.exists(((s: String) => s.equals("hyperedges")))

293
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
12937
12998
321
scala.Option.exists
Apply
false
0
false
c.keys.exists(((key: Iterable[String]) => key.exists(((s: String) => s.equals("hyperedges")))))

294
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13032
13078
322
<nosymbol>
Literal
false
0
false
"Hyperedges unaccepted member of simple graph"

295
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13079
13088
322
io.circe.ACursor.history
Select
false
0
false
c.history

296
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13016
13089
322
io.circe.DecodingFailure.apply
Apply
false
0
false
io.circe.DecodingFailure.apply("Hyperedges unaccepted member of simple graph", c.history)

297
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13011
13090
322
scala.util.Left.apply
Apply
false
0
false
scala.`package`.Left.apply[io.circe.DecodingFailure, Nothing](io.circe.DecodingFailure.apply("Hyperedges unaccepted member of simple graph", c.history))

298
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13011
13090
322
scala.util.Left.apply
Block
true
0
false
scala.`package`.Left.apply[io.circe.DecodingFailure, Nothing](io.circe.DecodingFailure.apply("Hyperedges unaccepted member of simple graph", c.history))

299
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13149
13153
325
<nosymbol>
Literal
false
0
false
"id"

300
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13157
13157
325
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

301
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13157
13157
325
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)

302
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13204
13211
326
<nosymbol>
Literal
false
0
false
"label"

303
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13215
13215
326
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

304
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13215
13215
326
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)

305
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13265
13275
327
<nosymbol>
Literal
false
0
false
"directed"

306
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13279
13279
327
io.circe.Decoder.decodeBoolean
Select
false
0
false
circe.this.Decoder.decodeBoolean

307
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13279
13279
327
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)

308
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13325
13331
328
<nosymbol>
Literal
false
0
false
"type"

309
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13335
13335
328
io.circe.Decoder.decodeString
Select
false
0
false
circe.this.Decoder.decodeString

310
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13335
13335
328
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)

311
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13385
13395
329
<nosymbol>
Literal
false
0
false
"metadata"

312
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13399
13399
329
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[T1](t1decoder)

313
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13442
13449
330
<nosymbol>
Literal
false
0
false
"nodes"

314
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13453
13453
330
com.github.tizuck.jsonGraphSchema.nodesDecoder
ApplyToImplicitArgs
false
0
false
jsonGraphSchema.this.nodesDecoder[T2](t2decoder)

315
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13453
13453
330
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.nodesDecoder[T2](t2decoder))

316
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13503
13510
331
<nosymbol>
Literal
false
0
false
"edges"

317
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13514
13514
331
com.github.tizuck.jsonGraphSchema.simpleEdgeDecoder
ApplyToImplicitArgs
false
0
false
jsonGraphSchema.this.simpleEdgeDecoder[T3](t3decoder)

318
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13514
13514
331
io.circe.Decoder.decodeList
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]](jsonGraphSchema.this.simpleEdgeDecoder[T3](t3decoder))

319
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13514
13514
331
io.circe.Decoder.decodeOption
ApplyToImplicitArgs
false
0
false
circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]](jsonGraphSchema.this.simpleEdgeDecoder[T3](t3decoder)))

320
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13668
13692
336
scala.Option.getOrElse
Apply
false
0
false
directed.getOrElse[Boolean](true)

321
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13789
13792
339
scala.Nil
Select
false
0
false
scala.`package`.Nil

322
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13783
13793
339
com.github.tizuck.jsonGraphSchema.Nodes.apply
Apply
false
0
false
jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil)

323
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13767
13794
339
scala.Option.getOrElse
Apply
false
0
false
nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil))

324
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13831
13834
340
scala.Nil
Select
false
0
false
scala.`package`.Nil

325
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13815
13835
340
scala.Option.getOrElse
Apply
false
0
false
edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]](scala.`package`.Nil)

326
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13571
13846
333
com.github.tizuck.jsonGraphSchema.SimpleGraph.<init>
Apply
false
0
false
new com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)

327
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13482
13846
331
scala.util.Either.map
Apply
false
0
false
c.downField("edges").as[Option[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]]](circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]](jsonGraphSchema.this.simpleEdgeDecoder[T3](t3decoder)))).map[com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((edges: Option[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = label;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$4: Option[String] = tpe;
  <artifact> val x$5: Option[T1] = metadata;
  <artifact> val x$6: com.github.tizuck.jsonGraphSchema.Nodes[T2] = nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil));
  <artifact> val x$7: List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]] = edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]](scala.`package`.Nil);
  new com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)
}))

328
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13421
13846
330
scala.util.Either.flatMap
Apply
false
0
false
c.downField("nodes").as[Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]](circe.this.Decoder.decodeOption[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.nodesDecoder[T2](t2decoder))).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((nodes: Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]) => c.downField("edges").as[Option[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]]](circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]](jsonGraphSchema.this.simpleEdgeDecoder[T3](t3decoder)))).map[com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((edges: Option[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = label;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$4: Option[String] = tpe;
  <artifact> val x$5: Option[T1] = metadata;
  <artifact> val x$6: com.github.tizuck.jsonGraphSchema.Nodes[T2] = nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil));
  <artifact> val x$7: List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]] = edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]](scala.`package`.Nil);
  new com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)
}))))

329
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13361
13846
329
scala.util.Either.flatMap
Apply
false
0
false
c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1decoder)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((metadata: Option[T1]) => c.downField("nodes").as[Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]](circe.this.Decoder.decodeOption[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.nodesDecoder[T2](t2decoder))).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((nodes: Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]) => c.downField("edges").as[Option[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]]](circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]](jsonGraphSchema.this.simpleEdgeDecoder[T3](t3decoder)))).map[com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((edges: Option[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = label;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$4: Option[String] = tpe;
  <artifact> val x$5: Option[T1] = metadata;
  <artifact> val x$6: com.github.tizuck.jsonGraphSchema.Nodes[T2] = nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil));
  <artifact> val x$7: List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]] = edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]](scala.`package`.Nil);
  new com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)
}))))))

330
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13306
13846
328
scala.util.Either.flatMap
Apply
false
0
false
c.downField("type").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((tpe: Option[String]) => c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1decoder)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((metadata: Option[T1]) => c.downField("nodes").as[Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]](circe.this.Decoder.decodeOption[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.nodesDecoder[T2](t2decoder))).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((nodes: Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]) => c.downField("edges").as[Option[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]]](circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]](jsonGraphSchema.this.simpleEdgeDecoder[T3](t3decoder)))).map[com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((edges: Option[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = label;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$4: Option[String] = tpe;
  <artifact> val x$5: Option[T1] = metadata;
  <artifact> val x$6: com.github.tizuck.jsonGraphSchema.Nodes[T2] = nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil));
  <artifact> val x$7: List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]] = edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]](scala.`package`.Nil);
  new com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)
}))))))))

331
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13241
13846
327
scala.util.Either.flatMap
Apply
false
0
false
c.downField("directed").as[Option[Boolean]](circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((directed: Option[Boolean]) => c.downField("type").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((tpe: Option[String]) => c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1decoder)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((metadata: Option[T1]) => c.downField("nodes").as[Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]](circe.this.Decoder.decodeOption[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.nodesDecoder[T2](t2decoder))).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((nodes: Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]) => c.downField("edges").as[Option[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]]](circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]](jsonGraphSchema.this.simpleEdgeDecoder[T3](t3decoder)))).map[com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((edges: Option[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = label;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$4: Option[String] = tpe;
  <artifact> val x$5: Option[T1] = metadata;
  <artifact> val x$6: com.github.tizuck.jsonGraphSchema.Nodes[T2] = nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil));
  <artifact> val x$7: List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]] = edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]](scala.`package`.Nil);
  new com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)
}))))))))))

332
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13183
13846
326
scala.util.Either.flatMap
Apply
false
0
false
c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((label: Option[String]) => c.downField("directed").as[Option[Boolean]](circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((directed: Option[Boolean]) => c.downField("type").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((tpe: Option[String]) => c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1decoder)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((metadata: Option[T1]) => c.downField("nodes").as[Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]](circe.this.Decoder.decodeOption[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.nodesDecoder[T2](t2decoder))).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((nodes: Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]) => c.downField("edges").as[Option[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]]](circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]](jsonGraphSchema.this.simpleEdgeDecoder[T3](t3decoder)))).map[com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((edges: Option[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = label;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$4: Option[String] = tpe;
  <artifact> val x$5: Option[T1] = metadata;
  <artifact> val x$6: com.github.tizuck.jsonGraphSchema.Nodes[T2] = nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil));
  <artifact> val x$7: List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]] = edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]](scala.`package`.Nil);
  new com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)
}))))))))))))

333
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13116
13846
325
scala.util.Either.flatMap
Apply
false
0
false
c.downField("id").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((id: Option[String]) => c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((label: Option[String]) => c.downField("directed").as[Option[Boolean]](circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((directed: Option[Boolean]) => c.downField("type").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((tpe: Option[String]) => c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1decoder)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((metadata: Option[T1]) => c.downField("nodes").as[Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]](circe.this.Decoder.decodeOption[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.nodesDecoder[T2](t2decoder))).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((nodes: Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]) => c.downField("edges").as[Option[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]]](circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]](jsonGraphSchema.this.simpleEdgeDecoder[T3](t3decoder)))).map[com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((edges: Option[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = label;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$4: Option[String] = tpe;
  <artifact> val x$5: Option[T1] = metadata;
  <artifact> val x$6: com.github.tizuck.jsonGraphSchema.Nodes[T2] = nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil));
  <artifact> val x$7: List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]] = edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]](scala.`package`.Nil);
  new com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)
}))))))))))))))

334
C:\Users\dbs476\Documents\Repos\scala-jgspec-dot\src\main\scala\jsonGraphSchema.scala
com.github.tizuck
jsonGraphSchema
Object
com.github.tizuck.jsonGraphSchema
simpleGraphDecoder
13116
13846
325
scala.util.Either.flatMap
Block
true
0
false
c.downField("id").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((id: Option[String]) => c.downField("label").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((label: Option[String]) => c.downField("directed").as[Option[Boolean]](circe.this.Decoder.decodeOption[Boolean](circe.this.Decoder.decodeBoolean)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((directed: Option[Boolean]) => c.downField("type").as[Option[String]](circe.this.Decoder.decodeOption[String](circe.this.Decoder.decodeString)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((tpe: Option[String]) => c.downField("metadata").as[Option[T1]](circe.this.Decoder.decodeOption[T1](t1decoder)).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((metadata: Option[T1]) => c.downField("nodes").as[Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]](circe.this.Decoder.decodeOption[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.nodesDecoder[T2](t2decoder))).flatMap[io.circe.DecodingFailure, com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((nodes: Option[com.github.tizuck.jsonGraphSchema.Nodes[T2]]) => c.downField("edges").as[Option[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]]](circe.this.Decoder.decodeOption[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]](circe.this.Decoder.decodeList[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]](jsonGraphSchema.this.simpleEdgeDecoder[T3](t3decoder)))).map[com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3]](((edges: Option[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]]) => {
  <artifact> val x$1: Option[String] = id;
  <artifact> val x$2: Option[String] = label;
  <artifact> val x$3: Boolean = directed.getOrElse[Boolean](true);
  <artifact> val x$4: Option[String] = tpe;
  <artifact> val x$5: Option[T1] = metadata;
  <artifact> val x$6: com.github.tizuck.jsonGraphSchema.Nodes[T2] = nodes.getOrElse[com.github.tizuck.jsonGraphSchema.Nodes[T2]](jsonGraphSchema.this.Nodes.apply[T2](scala.`package`.Nil));
  <artifact> val x$7: List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]] = edges.getOrElse[List[com.github.tizuck.jsonGraphSchema.SimpleEdge[T3]]](scala.`package`.Nil);
  new com.github.tizuck.jsonGraphSchema.SimpleGraph[T1,T2,T3](x$4, x$5, x$6, x$1, x$2, x$3, x$7)
}))))))))))))))

